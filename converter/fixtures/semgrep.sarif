{
  "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/schemas/sarif-schema-2.1.0.json",
  "runs": [
    {
      "invocations": [
        {
          "executionSuccessful": true,
          "toolExecutionNotifications": []
        }
      ],
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "WebApplication1/Controllers/CsrfHttpMethodController.cs",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 26,
                  "endLine": 23,
                  "snippet": {
                    "text": "    [HttpPost]\n    public void Post() {}"
                  },
                  "startColumn": 6,
                  "startLine": 22
                }
              }
            }
          ],
          "message": {
            "text": "An attacker could send a link to the victim. By visiting the\nmalicious link, a web page would trigger a POST request (because it is a\nblind attack - the attacker doesn\u2019t see a response from triggered request\nand has no use from GET request and GET requests should not change a state\non the server by definition) to the website. The victim would not be able\nto acknowledge that an action is made in the background, but his cookie\nwould be automatically submitted if he is authenticated to the website.\nThis attack does not require special interaction other than visiting a\nwebsite.\n"
          },
          "ruleId": "security_code_scan.SCS0016-1"
        }
      ],
      "tool": {
        "driver": {
          "name": "semgrep",
          "rules": [
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis untrusted. By combining trusted and untrusted data in the same data\nstructure, it becomes easier for programmers to mistakenly trust unvalidated\ndata.\n"
              },
              "id": "find_sec_bugs.TRUST_BOUNDARY_VIOLATION-1",
              "name": "find_sec_bugs.TRUST_BOUNDARY_VIOLATION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-501: Trust Boundary Violation"
                ]
              },
              "shortDescription": {
                "text": "A trust boundary can be thought of as line drawn through a program. On one side\nof the line, data is untrusted. On the other side of the line, data is assumed\nto be trustworthy. The purpose of validation logic is to allow data to safely\ncross the trust boundary - to move from untrusted to trusted. A trust boundary\nviolation occurs when a program blurs the line between what is trusted and what\nis untrusted. By combining trusted and untrusted data in the same data\nstructure, it becomes easier for programmers to mistakenly trust unvalidated\ndata.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "DefaultHttpClient with default constructor is not compatible with TLS 1.2\n"
              },
              "id": "find_sec_bugs.DEFAULT_HTTP_CLIENT-1",
              "name": "find_sec_bugs.DEFAULT_HTTP_CLIENT-1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "DefaultHttpClient with default constructor is not compatible with TLS 1.2\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "An insecure SSL version was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse 'ssl.PROTOCOL_TLSv1_2' or higher.\n"
              },
              "id": "bandit.B502.B503",
              "name": "bandit.B502.B503",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "An insecure SSL version was detected. TLS versions 1.0, 1.1, and all SSL versions\nare considered weak encryption and are deprecated.\nUse 'ssl.PROTOCOL_TLSv1_2' or higher.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Ensure that destination buffer is sufficiently large.\n"
              },
              "id": "flawfinder.strccpy-1.strcadd-1",
              "name": "flawfinder.strccpy-1.strcadd-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Subject to buffer overflow if buffer is not as big as claimed (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Ensure that destination buffer is sufficiently large.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Chmod setting a permissive mask on file."
              },
              "id": "bandit.B103",
              "name": "bandit.B103",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Incorrect Permission Assignment for Critical Resource",
                  "OWASP-A6: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Chmod setting a permissive mask on file."
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Avoid using `cPickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              },
              "id": "bandit.B301-2",
              "name": "bandit.B301-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Avoid using `cPickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Potential DoS vulnerability via decompression bomb\n"
              },
              "id": "gosec.G110-1",
              "name": "gosec.G110-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-409: Improper Handling of Highly Compressed Data"
                ]
              },
              "shortDescription": {
                "text": "Potential DoS vulnerability via decompression bomb\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Expect WriteFile permissions to be 600 or less\n"
              },
              "id": "gosec.G306-1",
              "name": "gosec.G306-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-276: Incorrect Default Permissions"
                ]
              },
              "shortDescription": {
                "text": "Expect WriteFile permissions to be 600 or less\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "File creation in shared tmp directory without using ioutil.Tempfile\n"
              },
              "id": "gosec.G303-1",
              "name": "gosec.G303-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-378: Creation of Temporary File With Insecure Permissions"
                ]
              },
              "shortDescription": {
                "text": "File creation in shared tmp directory without using ioutil.Tempfile\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use a more secure technique for acquiring random values.\n"
              },
              "id": "flawfinder.drand48-1.erand48-1.jrand48-1.lcong48-1.lrand48-1.mrand48-1.nrand48-1.random-1.seed48-1.setstate-1.srand-1.strfry-1.srandom-1.g_rand_boolean-1.g_rand_int-1.g_rand_int_range-1.g_rand_double-1.g_rand_double_range-1.g_random_boolean-1.g_random_int-1.g_random_int_range-1.g_random_double-1.g_random_double_range-1",
              "name": "flawfinder.drand48-1.erand48-1.jrand48-1.lcong48-1.lrand48-1.mrand48-1.nrand48-1.random-1.seed48-1.setstate-1.srand-1.strfry-1.srandom-1.g_rand_boolean-1.g_rand_int-1.g_rand_int_range-1.g_rand_double-1.g_rand_double_range-1.g_random_boolean-1.g_random_int-1.g_random_int_range-1.g_random_double-1.g_random_double_range-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327)"
                ]
              },
              "shortDescription": {
                "text": "Use a more secure technique for acquiring random values.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected usage of noassert in Buffer API, which allows the offset the be beyond the\nend of the buffer. This could result in writing or reading beyond the end of the buffer.\n"
              },
              "id": "eslint.detect-buffer-noassert",
              "name": "eslint.detect-buffer-noassert",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer"
                ]
              },
              "shortDescription": {
                "text": "Detected usage of noassert in Buffer API, which allows the offset the be beyond the\nend of the buffer. This could result in writing or reading beyond the end of the buffer.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Disabling HTML escaping put the application at risk for Cross-Site Scripting (XSS).\n"
              },
              "id": "find_sec_bugs.WICKET_XSS1-1",
              "name": "find_sec_bugs.WICKET_XSS1-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                ]
              },
              "shortDescription": {
                "text": "Disabling HTML escaping put the application at risk for Cross-Site Scripting (XSS).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "An expression is built with a dynamic value. The source of the value(s) should be verified to\navoid that unfiltered values fall into this risky code evaluation.\n"
              },
              "id": "find_sec_bugs.EL_INJECTION-1",
              "name": "find_sec_bugs.EL_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                ]
              },
              "shortDescription": {
                "text": "An expression is built with a dynamic value. The source of the value(s) should be verified to\navoid that unfiltered values fall into this risky code evaluation.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "When data from an untrusted source is put into a logger and not neutralized correctly, an\nattacker could forge log entries or include malicious content. Inserted false entries could be\nused to skew statistics, distract the administrator or even to implicate another party in the\ncommission of a malicious act. If the log file is processed automatically, the attacker can\nrender the file unusable by corrupting the format of the file or injecting unexpected\ncharacters. An attacker may also inject code or other commands into the log file and take\nadvantage of a vulnerability in the log processing utility (e.g. command injection or XSS).\n"
              },
              "id": "find_sec_bugs.CRLF_INJECTION_LOGS-1",
              "name": "find_sec_bugs.CRLF_INJECTION_LOGS-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"
                ]
              },
              "shortDescription": {
                "text": "When data from an untrusted source is put into a logger and not neutralized correctly, an\nattacker could forge log entries or include malicious content. Inserted false entries could be\nused to skew statistics, distract the administrator or even to implicate another party in the\ncommission of a malicious act. If the log file is processed automatically, the attacker can\nrender the file unusable by corrupting the format of the file or injecting unexpected\ncharacters. An attacker may also inject code or other commands into the log file and take\nadvantage of a vulnerability in the log processing utility (e.g. command injection or XSS).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use getpwuid(geteuid()) and extract the desired information instead.\n"
              },
              "id": "flawfinder.cuserid-1",
              "name": "flawfinder.cuserid-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Exactly what cuserid() does is poorly defined (e.g., some systems use the effective uid, like Linux, while others like System V use the real uid). Thus, you can't trust what it does. It's certainly not portable (The cuserid function was included in the 1988 version of POSIX, but removed from the 1990 version).  Also, if passed a non-null parameter, there's a risk of a buffer overflow if the passed-in buffer is not at least L_cuserid characters long (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Use getpwuid(geteuid()) and extract the desired information instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              },
              "id": "bandit.B304-10",
              "name": "bandit.B304-10",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected Flask app with debug=True. Do not deploy to production with this flag enabled\nas it will leak sensitive information. Instead, consider using Flask configuration\nvariables or setting 'debug' using system environment variables.\n"
              },
              "id": "bandit.B201",
              "name": "bandit.B201",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-489: Active Debug Code",
                  "OWASP-A6: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Detected Flask app with debug=True. Do not deploy to production with this flag enabled\nas it will leak sensitive information. Instead, consider using Flask configuration\nvariables or setting 'debug' using system environment variables.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Make sure destination can always hold the source data.\n"
              },
              "id": "flawfinder.memcpy-1.CopyMemory-1.bcopy-1",
              "name": "flawfinder.memcpy-1.CopyMemory-1.bcopy-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when copying to destination (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Make sure destination can always hold the source data.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "When an HTTP request contains unexpected CR and LF characters, the server may respond with an\noutput stream that is interpreted as two different HTTP responses (instead of one). An attacker\ncan control the second response and mount attacks such as cross-site scripting and cache\npoisoning attacks.\n"
              },
              "id": "find_sec_bugs.HTTP_RESPONSE_SPLITTING-1",
              "name": "find_sec_bugs.HTTP_RESPONSE_SPLITTING-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')"
                ]
              },
              "shortDescription": {
                "text": "When an HTTP request contains unexpected CR and LF characters, the server may respond with an\noutput stream that is interpreted as two different HTTP responses (instead of one). An attacker\ncan control the second response and mount attacks such as cross-site scripting and cache\npoisoning attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Prior to HTML5, Web browsers enforced the Same Origin Policy which ensures that in order for\nJavaScript to access the contents of a Web page, both the JavaScript and the Web page must\noriginate from the same domain. Without the Same Origin Policy, a malicious website could serve\nup JavaScript that loads sensitive information from other websites using a client's\ncredentials, cull through it, and communicate it back to the attacker. HTML5 makes it possible\nfor JavaScript to access data across domains if a new HTTP header called\nAccess-Control-Allow-Origin is defined. With this header, a Web server defines which other\ndomains are allowed to access its domain using cross-origin requests. However, caution should\nbe taken when defining the header because an overly permissive CORS policy will allow a\nmalicious application to communicate with the victim application in an inappropriate way,\nleading to spoofing, data theft, relay and other attacks.\n"
              },
              "id": "find_sec_bugs.PERMISSIVE_CORS-1",
              "name": "find_sec_bugs.PERMISSIVE_CORS-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-942: Permissive Cross-domain Policy with Untrusted Domains"
                ]
              },
              "shortDescription": {
                "text": "Prior to HTML5, Web browsers enforced the Same Origin Policy which ensures that in order for\nJavaScript to access the contents of a Web page, both the JavaScript and the Web page must\noriginate from the same domain. Without the Same Origin Policy, a malicious website could serve\nup JavaScript that loads sensitive information from other websites using a client's\ncredentials, cull through it, and communicate it back to the attacker. HTML5 makes it possible\nfor JavaScript to access data across domains if a new HTTP header called\nAccess-Control-Allow-Origin is defined. With this header, a Web server defines which other\ndomains are allowed to access its domain using cross-origin requests. However, caution should\nbe taken when defining the header because an overly permissive CORS policy will allow a\nmalicious application to communicate with the victim application in an inappropriate way,\nleading to spoofing, data theft, relay and other attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Do not grant dangerous combinations of permissions.\n"
              },
              "id": "find_sec_bugs.DANGEROUS_PERMISSION_COMBINATION-1",
              "name": "find_sec_bugs.DANGEROUS_PERMISSION_COMBINATION-1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "Do not grant dangerous combinations of permissions.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead."
              },
              "id": "bandit.B310-1",
              "name": "bandit.B310-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-939: Improper Authorization in Handler for Custom URL Scheme",
                  "OWASP-A5: Broken Access Control"
                ]
              },
              "shortDescription": {
                "text": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead."
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Overly permissive file permission\n"
              },
              "id": "find_sec_bugs.OVERLY_PERMISSIVE_FILE_PERMISSION-1",
              "name": "find_sec_bugs.OVERLY_PERMISSIVE_FILE_PERMISSION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Incorrect Permission Assignment for Critical Resource"
                ]
              },
              "shortDescription": {
                "text": "Overly permissive file permission\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP\nresponse splitting vulnerability. See http://en.wikipedia.org/wiki/HTTP_response_splitting for\nmore information.\n"
              },
              "id": "find_sec_bugs.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER-1",
              "name": "find_sec_bugs.HRS_REQUEST_PARAMETER_TO_HTTP_HEADER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')"
                ]
              },
              "shortDescription": {
                "text": "This code directly writes an HTTP parameter to an HTTP header, which allows for a HTTP\nresponse splitting vulnerability. See http://en.wikipedia.org/wiki/HTTP_response_splitting for\nmore information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use tempfile.NamedTemporaryFile instead. From the official Python documentation: THIS FUNCTION IS UNSAFE AND SHOULD\nNOT BE USED. The file name may refer to a file that did not exist at some point, but by the time you get around to creating\nit, someone else may have beaten you to the punch.\n"
              },
              "id": "bandit.B306",
              "name": "bandit.B306",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Insecure Temporary File",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Use tempfile.NamedTemporaryFile instead. From the official Python documentation: THIS FUNCTION IS UNSAFE AND SHOULD\nNOT BE USED. The file name may refer to a file that did not exist at some point, but by the time you get around to creating\nit, someone else may have beaten you to the punch.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Use nanosleep(2) or setitimer(2) instead.\n"
              },
              "id": "flawfinder.usleep-1",
              "name": "flawfinder.usleep-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-676: This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676)"
                ]
              },
              "shortDescription": {
                "text": "Use nanosleep(2) or setitimer(2) instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "When converting a byte array containing a hash signature to a human readable string, a\nconversion mistake can be made if the array is read byte by byte.\n"
              },
              "id": "find_sec_bugs.BAD_HEXA_CONVERSION-1",
              "name": "find_sec_bugs.BAD_HEXA_CONVERSION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-704: Incorrect Type Conversion or Cast"
                ]
              },
              "shortDescription": {
                "text": "When converting a byte array containing a hash signature to a human readable string, a\nconversion mistake can be made if the array is read byte by byte.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              },
              "id": "bandit.B304-6",
              "name": "bandit.B304-6",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected RC4 cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Ensure the destination has 4 times the size of the source, to leave room for expansion.\n"
              },
              "id": "flawfinder.streadd-1.strecpy-1",
              "name": "flawfinder.streadd-1.strecpy-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: This function does not protect against buffer overflows (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Ensure the destination has 4 times the size of the source, to leave room for expansion.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD2 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-3",
              "name": "bandit.B303-3",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD2 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD4 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-4",
              "name": "bandit.B303-4",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD4 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The software uses the RSA algorithm but does not incorporate Optimal Asymmetric\nEncryption Padding (OAEP), which might weaken the encryption.\n"
              },
              "id": "find_sec_bugs.RSA_NO_PADDING-1",
              "name": "find_sec_bugs.RSA_NO_PADDING-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-780: Use of RSA Algorithm without OAEP"
                ]
              },
              "shortDescription": {
                "text": "The software uses the RSA algorithm but does not incorporate Optimal Asymmetric\nEncryption Padding (OAEP), which might weaken the encryption.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Avoid using XMLDecoder to parse content from an untrusted source.\n"
              },
              "id": "find_sec_bugs.XML_DECODER-1",
              "name": "find_sec_bugs.XML_DECODER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data"
                ]
              },
              "shortDescription": {
                "text": "Avoid using XMLDecoder to parse content from an untrusted source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Consider possible security implications associated with subprocess module.\n"
              },
              "id": "bandit.B404",
              "name": "bandit.B404",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Consider possible security implications associated with subprocess module.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-6",
              "name": "bandit.B303-6",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Insecure XML parsing functionality, prefer 'defusedxml'"
              },
              "id": "bandit.B317",
              "name": "bandit.B317",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference",
                  "OWASP-A4: XML External Entities (XXE)"
                ]
              },
              "shortDescription": {
                "text": "Insecure XML parsing functionality, prefer 'defusedxml'"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A variable is present in the filename argument of fs calls, this might allow an attacker to access anything on your system.\n"
              },
              "id": "eslint.detect-non-literal-fs-filename",
              "name": "eslint.detect-non-literal-fs-filename",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "A variable is present in the filename argument of fs calls, this might allow an attacker to access anything on your system.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Overly permissive file permission\n"
              },
              "id": "find_sec_bugs.OVERLY_PERMISSIVE_FILE_PERMISSION-2",
              "name": "find_sec_bugs.OVERLY_PERMISSIVE_FILE_PERMISSION-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Incorrect Permission Assignment for Critical Resource"
                ]
              },
              "shortDescription": {
                "text": "Overly permissive file permission\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected IDEA cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
              },
              "id": "bandit.B304-12",
              "name": "bandit.B304-12",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected IDEA cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use getpwuid() instead.\n"
              },
              "id": "flawfinder.getpw-1",
              "name": "flawfinder.getpw-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: This function is dangerous; it may overflow the provided buffer. It extracts data from a 'protected' area, but most systems have many commands to let users modify the protected area, and it's not always clear what their limits are.  Best to avoid using this function altogether (CWE-676, CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Use getpwuid() instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The endpoint is potentially accessible to not authorized users. If it contains sensitive\ninformation, like log files for example, it may lead to privilege escalation.\n"
              },
              "id": "security_code_scan.SCS0012-1",
              "name": "security_code_scan.SCS0012-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-284: Improper Access Control"
                ]
              },
              "shortDescription": {
                "text": "The endpoint is potentially accessible to not authorized users. If it contains sensitive\ninformation, like log files for example, it may lead to privilege escalation.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Unvalidated redirects occur when an application redirects a user to a\ndestination URL specified by a user supplied parameter that is not validated.\nSuch vulnerabilities can be used to facilitate phishing attacks.\n"
              },
              "id": "security_code_scan.SCS0027-1",
              "name": "security_code_scan.SCS0027-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
                ]
              },
              "shortDescription": {
                "text": "Unvalidated redirects occur when an application redirects a user to a\ndestination URL specified by a user supplied parameter that is not validated.\nSuch vulnerabilities can be used to facilitate phishing attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The product does not require that users should have strong passwords, which\nmakes it easier for attackers to compromise user accounts.\n"
              },
              "id": "security_code_scan.SCS0032-1.SCS0033-1.SCS0034-1",
              "name": "security_code_scan.SCS0032-1.SCS0033-1.SCS0034-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-521: Weak Password Requirements"
                ]
              },
              "shortDescription": {
                "text": "The product does not require that users should have strong passwords, which\nmakes it easier for attackers to compromise user accounts.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a constant for the format specification.\n"
              },
              "id": "flawfinder.printf-1.vprintf-1.vwprintf-1.vfwprintf-1._vtprintf-1.wprintf-1",
              "name": "flawfinder.printf-1.vprintf-1.vwprintf-1.vfwprintf-1._vtprintf-1.wprintf-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-134: If format strings can be influenced by an attacker, they can be exploited (CWE-134)"
                ]
              },
              "shortDescription": {
                "text": "Use a constant for the format specification.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Url provided to HTTP request as taint input\n"
              },
              "id": "gosec.G107-1",
              "name": "gosec.G107-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-88: Improper Neutralization of Argument Delimiters in a Command"
                ]
              },
              "shortDescription": {
                "text": "Url provided to HTTP request as taint input\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "This specific mode of CBC with PKCS5Padding is susceptible to padding oracle attacks. An\nadversary could potentially decrypt the message if the system exposed the difference between\nplaintext with invalid padding or valid padding. The distinction between valid and invalid\npadding is usually revealed through distinct error messages being returned for each condition.\n"
              },
              "id": "find_sec_bugs.PADDING_ORACLE-1",
              "name": "find_sec_bugs.PADDING_ORACLE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-696: Incorrect Behavior Order"
                ]
              },
              "shortDescription": {
                "text": "This specific mode of CBC with PKCS5Padding is susceptible to padding oracle attacks. An\nadversary could potentially decrypt the message if the system exposed the difference between\nplaintext with invalid padding or valid padding. The distinction between valid and invalid\npadding is usually revealed through distinct error messages being returned for each condition.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The software constructs all or part of a code segment using externally-influenced\ninput from an upstream component, but it does not neutralize or incorrectly\nneutralizes special elements that could modify the syntax or behavior of the\nintended code segment.\n"
              },
              "id": "find_sec_bugs.SCRIPT_ENGINE_INJECTION-2",
              "name": "find_sec_bugs.SCRIPT_ENGINE_INJECTION-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                ]
              },
              "shortDescription": {
                "text": "The software constructs all or part of a code segment using externally-influenced\ninput from an upstream component, but it does not neutralize or incorrectly\nneutralizes special elements that could modify the syntax or behavior of the\nintended code segment.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Creating and using insecure temporary files can leave application and system data vulnerable to\nattack (CWE-377).\n"
              },
              "id": "flawfinder.mktemp-1",
              "name": "flawfinder.mktemp-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Temporary file race condition (CWE-377)"
                ]
              },
              "shortDescription": {
                "text": "Creating and using insecure temporary files can leave application and system data vulnerable to\nattack (CWE-377).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).\n"
              },
              "id": "flawfinder.strcpy-1",
              "name": "flawfinder.strcpy-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The software uses external input to construct a pathname that is intended\nto identify a file or directory that is located underneath a restricted\nparent directory, but the software does not properly neutralize special\nelements within the pathname that can cause the pathname to resolve to a\nlocation that is outside of the restricted directory..\n"
              },
              "id": "security_code_scan.SCS0018-1",
              "name": "security_code_scan.SCS0018-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "The software uses external input to construct a pathname that is intended\nto identify a file or directory that is located underneath a restricted\nparent directory, but the software does not properly neutralize special\nelements within the pathname that can cause the pathname to resolve to a\nlocation that is outside of the restricted directory..\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The use of `exec` is risky.\n"
              },
              "id": "bandit.B102",
              "name": "bandit.B102",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "The use of `exec` is risky.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-2",
              "name": "bandit.B303-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Use posix_memalign instead (defined in POSIX's 1003.1d).  Don't switch to valloc(); it is\nmarked as obsolete in BSD 4.3, as legacy in SUSv2, and is no longer defined in SUSv3.  In some\ncases, malloc()'s alignment may be sufficient.\n"
              },
              "id": "flawfinder.memalign-1",
              "name": "flawfinder.memalign-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-676: On some systems (though not Linux-based systems) an attempt to free() results from memalign() may fail. This may, on a few systems, be exploitable.  Also note that memalign() may not check that the boundary parameter is correct (CWE-676)"
                ]
              },
              "shortDescription": {
                "text": "Use posix_memalign instead (defined in POSIX's 1003.1d).  Don't switch to valloc(); it is\nmarked as obsolete in BSD 4.3, as legacy in SUSv2, and is no longer defined in SUSv3.  In some\ncases, malloc()'s alignment may be sufficient.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected non-literal calls to child_process.exec(). This could lead to a command\ninjection vulnerability.\n"
              },
              "id": "eslint.detect-child-process",
              "name": "eslint.detect-child-process",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Detected non-literal calls to child_process.exec(). This could lead to a command\ninjection vulnerability.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Easily used incorrectly\n"
              },
              "id": "flawfinder.strncpy-1",
              "name": "flawfinder.strncpy-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Doesn't always \\0-terminate or check for invalid pointers [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Easily used incorrectly\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "This function is often discouraged by most C++ coding standards in favor of its safer\nalternatives provided since C++14. Consider using a form of this function that checks the\nsecond iterator before potentially overflowing it.\n"
              },
              "id": "flawfinder.equal-1.mismatch-1.is_permutation-1",
              "name": "flawfinder.equal-1.mismatch-1.is_permutation-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-126: Function does not check the second iterator for over-read conditions (CWE-126)"
                ]
              },
              "shortDescription": {
                "text": "This function is often discouraged by most C++ coding standards in favor of its safer\nalternatives provided since C++14. Consider using a form of this function that checks the\nsecond iterator before potentially overflowing it.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Easily used incorrectly\n"
              },
              "id": "flawfinder.lstrcpyn-1.wcsncpy-1._tcsncpy-1._mbsnbcpy-1",
              "name": "flawfinder.lstrcpyn-1.wcsncpy-1._tcsncpy-1._mbsnbcpy-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Doesn't always \\0-terminate or check for invalid pointers [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Easily used incorrectly\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The use of hard-coded passwords increases the possibility of password guessing tremendously.\n"
              },
              "id": "gosec.G101-1",
              "name": "gosec.G101-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password",
                  "OWASP-A3: Broken Authentication and Session Management"
                ]
              },
              "shortDescription": {
                "text": "The use of hard-coded passwords increases the possibility of password guessing tremendously.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected RC2 cipher algorithm which is considered insecure. The algorithm has known vulnerabilities and is difficult to use securely. Use AES instead.\n"
              },
              "id": "bandit.B304-5",
              "name": "bandit.B304-5",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected RC2 cipher algorithm which is considered insecure. The algorithm has known vulnerabilities and is difficult to use securely. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"
              },
              "id": "eslint.detect-non-literal-require",
              "name": "eslint.detect-non-literal-require",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Detected the use of require(variable). Calling require with a non-literal argument might\nallow an attacker to load an run arbitrary code, or access arbitrary files.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A HostnameVerifier that accept any host are often use because of certificate\nreuse on many hosts. As a consequence, this is vulnerable to Man-in-the-middleattacks\nattacks since the client will trust any certificate.\n"
              },
              "id": "find_sec_bugs.SSL_CONTEXT-1",
              "name": "find_sec_bugs.SSL_CONTEXT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-295: Improper Certificate Validation"
                ]
              },
              "shortDescription": {
                "text": "A HostnameVerifier that accept any host are often use because of certificate\nreuse on many hosts. As a consequence, this is vulnerable to Man-in-the-middleattacks\nattacks since the client will trust any certificate.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n"
              },
              "id": "find_sec_bugs.PT_ABSOLUTE_PATH_TRAVERSAL-1",
              "name": "find_sec_bugs.PT_ABSOLUTE_PATH_TRAVERSAL-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize absolute path sequences such as\n\"/abs/path\" that can resolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/36.html for more information.\"\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The software constructs all or part of a code segment using externally-influenced\ninput from an upstream component, but it does not neutralize or incorrectly\nneutralizes special elements that could modify the syntax or behavior of the\nintended code segment.\n"
              },
              "id": "find_sec_bugs.SCRIPT_ENGINE_INJECTION-1.SPEL_INJECTION-1.EL_INJECTION-2.SEAM_LOG_INJECTION-1",
              "name": "find_sec_bugs.SCRIPT_ENGINE_INJECTION-1.SPEL_INJECTION-1.EL_INJECTION-2.SEAM_LOG_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                ]
              },
              "shortDescription": {
                "text": "The software constructs all or part of a code segment using externally-influenced\ninput from an upstream component, but it does not neutralize or incorrectly\nneutralizes special elements that could modify the syntax or behavior of the\nintended code segment.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Form inputs should have minimal input validation. Preventive validation helps\nprovide defense in depth against a variety of risks.\n"
              },
              "id": "find_sec_bugs.STRUTS_FORM_VALIDATION-1",
              "name": "find_sec_bugs.STRUTS_FORM_VALIDATION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation"
                ]
              },
              "shortDescription": {
                "text": "Form inputs should have minimal input validation. Preventive validation helps\nprovide defense in depth against a variety of risks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider using a function version that stops copying at the end of the buffer.\n"
              },
              "id": "flawfinder.lstrcpy-1.wcscpy-1._tcscpy-1._mbscpy-1",
              "name": "flawfinder.lstrcpy-1.wcscpy-1._tcscpy-1._mbscpy-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Consider using a function version that stops copying at the end of the buffer.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The marshal module is not intended to be secure against erroneous or maliciously constructed data.\nNever unmarshal data received from an untrusted or unauthenticated source.\nSee more details: https://docs.python.org/3/library/marshal.html?highlight=security\n"
              },
              "id": "bandit.B302",
              "name": "bandit.B302",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "The marshal module is not intended to be secure against erroneous or maliciously constructed data.\nNever unmarshal data received from an untrusted or unauthenticated source.\nSee more details: https://docs.python.org/3/library/marshal.html?highlight=security\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Never create NULL ACLs; an attacker can set it to Everyone (Deny\nAll Access)\n"
              },
              "id": "flawfinder.SetSecurityDescriptorDacl-1",
              "name": "flawfinder.SetSecurityDescriptorDacl-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Never create NULL ACLs; an attacker can set it to Everyone (Deny All Access), which would even forbid administrator access (CWE-732)"
                ]
              },
              "shortDescription": {
                "text": "Never create NULL ACLs; an attacker can set it to Everyone (Deny\nAll Access)\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Server identity verification is disabled when making SSL connections.\n"
              },
              "id": "find_sec_bugs.INSECURE_SMTP_SSL-1",
              "name": "find_sec_bugs.INSECURE_SMTP_SSL-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-297: Improper Validation of Certificate with Host Mismatch"
                ]
              },
              "shortDescription": {
                "text": "Server identity verification is disabled when making SSL connections.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Temporary file race condition in certain cases.\n"
              },
              "id": "flawfinder.GetTempFileName-1",
              "name": "flawfinder.GetTempFileName-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Temporary file race condition in certain cases (e.g., if run as SYSTEM in many versions of Windows) (CWE-377)"
                ]
              },
              "shortDescription": {
                "text": "Temporary file race condition in certain cases.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected use of an insecure MD4 or MD5 hash function.\nThese functions have known vulnerabilities and are considered deprecated.\nConsider using 'SHA256' or a similar function instead.\n"
              },
              "id": "bandit.B324",
              "name": "bandit.B324",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected use of an insecure MD4 or MD5 hash function.\nThese functions have known vulnerabilities and are considered deprecated.\nConsider using 'SHA256' or a similar function instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Perform bounds checking, use functions that limit length, or ensure that the size is larger\nthan the maximum possible length.\n"
              },
              "id": "flawfinder.char-1.TCHAR-1.wchar_t-1",
              "name": "flawfinder.char-1.TCHAR-1.wchar_t-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Perform bounds checking, use functions that limit length, or ensure that the size is larger\nthan the maximum possible length.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A new cookie is created without the HttpOnly flag set. The HttpOnly flag is a directive to the\nbrowser to make sure that the cookie can not be red by malicious script. When a user is the\ntarget of a \"Cross-Site Scripting\", the attacker would benefit greatly from getting the session\nid for example.\n"
              },
              "id": "find_sec_bugs.HTTPONLY_COOKIE-1",
              "name": "find_sec_bugs.HTTPONLY_COOKIE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"
                ]
              },
              "shortDescription": {
                "text": "A new cookie is created without the HttpOnly flag set. The HttpOnly flag is a directive to the\nbrowser to make sure that the cookie can not be red by malicious script. When a user is the\ntarget of a \"Cross-Site Scripting\", the attacker would benefit greatly from getting the session\nid for example.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              },
              "id": "security_code_scan.SCS0007-1",
              "name": "security_code_scan.SCS0007-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference (\u2018XXE\u2019)"
                ]
              },
              "shortDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use of deprecated TLS version which may result in the unauthorized retrieval\nof sensitive information. It is recommended to use TLS 1.2 or TLS 1.3 instead.\n"
              },
              "id": "gosec.G402-2",
              "name": "gosec.G402-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-310: Cryptographic Issues",
                  "OWASP-A05:2021: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Use of deprecated TLS version which may result in the unauthorized retrieval\nof sensitive information. It is recommended to use TLS 1.2 or TLS 1.3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Creating and using insecure temporary files can leave application and system data vulnerable to\nattack\n"
              },
              "id": "flawfinder.tmpfile-1",
              "name": "flawfinder.tmpfile-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377)"
                ]
              },
              "shortDescription": {
                "text": "Creating and using insecure temporary files can leave application and system data vulnerable to\nattack\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Avoid using `shelve`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              },
              "id": "bandit.B301-4",
              "name": "bandit.B301-4",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Avoid using `shelve`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Ensure that destination is at least as long as the source.\n"
              },
              "id": "flawfinder.strtrns-1",
              "name": "flawfinder.strtrns-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: This function does not protect against buffer overflows (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Ensure that destination is at least as long as the source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Unvalidated redirects occur when an application redirects a user to a\ndestination URL specified by a user supplied parameter that is not validated.\nSuch vulnerabilities can be used to facilitate phishing attacks.\n"
              },
              "id": "find_sec_bugs.UNVALIDATED_REDIRECT-1.URL_REWRITING-1",
              "name": "find_sec_bugs.UNVALIDATED_REDIRECT-1.URL_REWRITING-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-601: URL Redirection to Untrusted Site ('Open Redirect')"
                ]
              },
              "shortDescription": {
                "text": "Unvalidated redirects occur when an application redirects a user to a\ndestination URL specified by a user supplied parameter that is not validated.\nSuch vulnerabilities can be used to facilitate phishing attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The software constructs all or part of an LDAP query using\nexternally-influenced input from an upstream component, but it does not\nneutralize or incorrectly neutralizes special elements that could modify\nthe intended LDAP query when it is sent to a downstream component.\n"
              },
              "id": "security_code_scan.SCS0026-1.SCS0031-1",
              "name": "security_code_scan.SCS0026-1.SCS0031-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-90: Improper Neutralization of Special Elements used in an LDAP Query (\u2018LDAP Injection\u2019)"
                ]
              },
              "shortDescription": {
                "text": "The software constructs all or part of an LDAP query using\nexternally-influenced input from an upstream component, but it does not\nneutralize or incorrectly neutralizes special elements that could modify\nthe intended LDAP query when it is sent to a downstream component.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected XOR cipher algorithm which is considered insecure. This algorithm\nis not cryptographically secure and can be reversed easily. Use AES instead.\n"
              },
              "id": "bandit.B304-9",
              "name": "bandit.B304-9",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected XOR cipher algorithm which is considered insecure. This algorithm\nis not cryptographically secure and can be reversed easily. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Using the unsafe package in Go gives you low-level memory management and many\nof the strength of the C language but also gives flexibility to the attacker of\nyour application. The pointer arithmetic is one of the examples from the unsafe\npackage which can be used for data leak, memory corruption or even execution of\nattackers own script.\n"
              },
              "id": "gosec.G103-1",
              "name": "gosec.G103-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-242: Audit the use of unsafe block"
                ]
              },
              "shortDescription": {
                "text": "Using the unsafe package in Go gives you low-level memory management and many\nof the strength of the C language but also gives flexibility to the attacker of\nyour application. The pointer arithmetic is one of the examples from the unsafe\npackage which can be used for data leak, memory corruption or even execution of\nattackers own script.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The filename provided by the FileUpload API can be tampered with by the client to reference\nunauthorized files. The provided filename should be properly validated to ensure it's properly\nstructured, contains no unauthorized path characters (e.g., / \\), and refers to an authorized\nfile.\n"
              },
              "id": "find_sec_bugs.FILE_UPLOAD_FILENAME-1",
              "name": "find_sec_bugs.FILE_UPLOAD_FILENAME-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "The filename provided by the FileUpload API can be tampered with by the client to reference\nunauthorized files. The provided filename should be properly validated to ensure it's properly\nstructured, contains no unauthorized path characters (e.g., / \\), and refers to an authorized\nfile.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "An attacker can set arbitrary bean properties that can compromise system integrity. An\nattacker can leverage this functionality to access special bean properties like\nclass.classLoader that will allow them to override system properties and potentially execute\narbitrary code.\n"
              },
              "id": "find_sec_bugs.BEAN_PROPERTY_INJECTION-1",
              "name": "find_sec_bugs.BEAN_PROPERTY_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-15: External Control of System or Configuration Setting"
                ]
              },
              "shortDescription": {
                "text": "An attacker can set arbitrary bean properties that can compromise system integrity. An\nattacker can leverage this functionality to access special bean properties like\nclass.classLoader that will allow them to override system properties and potentially execute\narbitrary code.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Try, Except, Pass\n"
              },
              "id": "bandit.B110",
              "name": "bandit.B110",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-703: Improper Check or Handling of Exceptional Conditions"
                ]
              },
              "shortDescription": {
                "text": "Try, Except, Pass\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Make the specific calls to do exactly what you want.  If you continue to use it, or write your\nown, be sure to zero the password as soon as possible to avoid leaving the cleartext password\nvisible in the process' address space.\n"
              },
              "id": "flawfinder.getpass-1",
              "name": "flawfinder.getpass-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Make the specific calls to do exactly what you want.  If you continue to use it, or write your\nown, be sure to zero the password as soon as possible to avoid leaving the cleartext password\nvisible in the process' address space.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Creating and using insecure temporary files can leave application and system data vulnerable to\nattack.\n"
              },
              "id": "flawfinder.tmpnam-1.tempnam-1",
              "name": "flawfinder.tmpnam-1.tempnam-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Temporary file race condition (CWE-377)"
                ]
              },
              "shortDescription": {
                "text": "Creating and using insecure temporary files can leave application and system data vulnerable to\nattack.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE)\nattacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'.\nSee https://github.com/tiran/defusedxml for more information.\n"
              },
              "id": "bandit.B313.B314.B315.B316.B318.B319.B320.B405.B406.B407.B408.B409.B410",
              "name": "bandit.B313.B314.B315.B316.B318.B319.B320.B405.B406.B407.B408.B409.B410",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference",
                  "OWASP-A4: XML External Entities (XXE)"
                ]
              },
              "shortDescription": {
                "text": "Found use of the native Python XML libraries, which is vulnerable to XML external entity (XXE)\nattacks. The Python documentation recommends the 'defusedxml' library instead. Use 'defusedxml'.\nSee https://github.com/tiran/defusedxml for more information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Ensure that umask is given most restrictive possible setting (e.g.,\n066 or 077)\n"
              },
              "id": "flawfinder.umask-1",
              "name": "flawfinder.umask-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732)"
                ]
              },
              "shortDescription": {
                "text": "Ensure that umask is given most restrictive possible setting (e.g.,\n066 or 077)\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The use of a predictable random value can lead to vulnerabilities when used in certain security\ncritical contexts.\n"
              },
              "id": "security_code_scan.SCS0005-1",
              "name": "security_code_scan.SCS0005-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"
                ]
              },
              "shortDescription": {
                "text": "The use of a predictable random value can lead to vulnerabilities when used in certain security\ncritical contexts.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider possible security implications associated with httpoxy module.\n"
              },
              "id": "bandit.B412",
              "name": "bandit.B412",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-284: Improper Access Control",
                  "OWASP-A5: Broken Access Control"
                ]
              },
              "shortDescription": {
                "text": "Consider possible security implications associated with httpoxy module.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Make sure the program immediately chdir(\"/\"), closes file descriptors, and drops root\nprivileges, and that all necessary files (and no more!) are in the new root.\n"
              },
              "id": "flawfinder.chroot-1",
              "name": "flawfinder.chroot-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: chroot can be very helpful, but is hard to use correctly (CWE-250, CWE-22)"
                ]
              },
              "shortDescription": {
                "text": "Make sure the program immediately chdir(\"/\"), closes file descriptors, and drops root\nprivileges, and that all necessary files (and no more!) are in the new root.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The RC4 stream-cipher has been cryptographically broken and is unsuitable\nfor use in production. It is recommended that ChaCha20 or Advanced Encryption\nStandard (AES) be used instead.\n"
              },
              "id": "gosec.G503-1",
              "name": "gosec.G503-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "The RC4 stream-cipher has been cryptographically broken and is unsuitable\nfor use in production. It is recommended that ChaCha20 or Advanced Encryption\nStandard (AES) be used instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n"
              },
              "id": "find_sec_bugs.XPATH_INJECTION-1",
              "name": "find_sec_bugs.XPATH_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')"
                ]
              },
              "shortDescription": {
                "text": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The network communications for Hazelcast is configured to use a symmetric cipher (probably DES\nor Blowfish). Those ciphers alone do not provide integrity or secure authentication. The use of\nasymmetric encryption is preferred.\n"
              },
              "id": "find_sec_bugs.HAZELCAST_SYMMETRIC_ENCRYPTION-1",
              "name": "find_sec_bugs.HAZELCAST_SYMMETRIC_ENCRYPTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "The network communications for Hazelcast is configured to use a symmetric cipher (probably DES\nor Blowfish). Those ciphers alone do not provide integrity or secure authentication. The use of\nasymmetric encryption is preferred.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
              },
              "id": "bandit.B323",
              "name": "bandit.B323",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-295: Improper Certificate Validation",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "This method is part of a SOAP Web Service (JSR224). The security of this web service should be\nanalyzed; Authentication, if enforced, should be tested. Access control, if enforced, should be\ntested. The inputs should be tracked for potential vulnerabilities. The communication should\nideally be over SSL.\n"
              },
              "id": "find_sec_bugs.JAXWS_ENDPOINT-1",
              "name": "find_sec_bugs.JAXWS_ENDPOINT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation",
                  "OWASP-OWASP: Cross-Site Request Forgery"
                ]
              },
              "shortDescription": {
                "text": "This method is part of a SOAP Web Service (JSR224). The security of this web service should be\nanalyzed; Authentication, if enforced, should be tested. Access control, if enforced, should be\ntested. The inputs should be tracked for potential vulnerabilities. The communication should\nideally be over SSL.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "SQL query construction using format string\n"
              },
              "id": "gosec.G201-1",
              "name": "gosec.G201-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command"
                ]
              },
              "shortDescription": {
                "text": "SQL query construction using format string\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider possible security implications associated with pycrypto module.\n"
              },
              "id": "bandit.B413",
              "name": "bandit.B413",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Consider possible security implications associated with pycrypto module.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected a paramiko host key policy that implicitly trusts a server's\nhost key. Host keys should be verified to ensure the connection\nis not to a malicious server. Use RejectPolicy or a custom subclass\ninstead.\n"
              },
              "id": "bandit.B507",
              "name": "bandit.B507",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-322: Key Exchange without Entity Authentication",
                  "OWASP-A5: Broken Access Control"
                ]
              },
              "shortDescription": {
                "text": "Detected a paramiko host key policy that implicitly trusts a server's\nhost key. Host keys should be verified to ensure the connection\nis not to a malicious server. Use RejectPolicy or a custom subclass\ninstead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider possible security implications associated with pickle module.\n"
              },
              "id": "bandit.B403",
              "name": "bandit.B403",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Consider possible security implications associated with pickle module.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Possible hardcoded password\n"
              },
              "id": "bandit.B105",
              "name": "bandit.B105",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password",
                  "OWASP-A3: Broken Authentication and Session Management"
                ]
              },
              "shortDescription": {
                "text": "Possible hardcoded password\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Poor file permissions used when creation file or using chmod\n"
              },
              "id": "gosec.G302-1",
              "name": "gosec.G302-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Incorrect Permission Assignment for Critical Resource",
                  "OWASP-A6: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Poor file permissions used when creation file or using chmod\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "try using a library call that implements the same functionality if available.\n"
              },
              "id": "flawfinder.system-1",
              "name": "flawfinder.system-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: This causes a new program to execute and is difficult to use safely (CWE-78)"
                ]
              },
              "shortDescription": {
                "text": "try using a library call that implements the same functionality if available.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use getcwd instead.\n"
              },
              "id": "flawfinder.getwd-1",
              "name": "flawfinder.getwd-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: This does not protect against buffer overflows by itself, so use with caution (CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Use getcwd instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Audit use of command execution\n"
              },
              "id": "gosec.G204-1",
              "name": "gosec.G204-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Audit use of command execution\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "This code creates a database connect using a blank or empty password. This indicates that the\ndatabase is not protected by a password.\n"
              },
              "id": "find_sec_bugs.DMI_EMPTY_DB_PASSWORD-1.HARD_CODE_PASSWORD-2",
              "name": "find_sec_bugs.DMI_EMPTY_DB_PASSWORD-1.HARD_CODE_PASSWORD-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password"
                ]
              },
              "shortDescription": {
                "text": "This code creates a database connect using a blank or empty password. This indicates that the\ndatabase is not protected by a password.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "FTP does not encrypt communications by default. This can lead to sensitive\ndata being exposed. Ensure use of FTP here does not expose sensitive data.\n"
              },
              "id": "bandit.B321",
              "name": "bandit.B321",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-319: Cleartext Transmission of Sensitive Information",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "FTP does not encrypt communications by default. This can lead to sensitive\ndata being exposed. Ensure use of FTP here does not expose sensitive data.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n"
              },
              "id": "find_sec_bugs.SQL_INJECTION_SPRING_JDBC-1.SQL_INJECTION_JPA-1.SQL_INJECTION_JDO-1.SQL_INJECTION_JDBC-1.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE-1",
              "name": "find_sec_bugs.SQL_INJECTION_SPRING_JDBC-1.SQL_INJECTION_JPA-1.SQL_INJECTION_JDO-1.SQL_INJECTION_JDBC-1.SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
                ]
              },
              "shortDescription": {
                "text": "The input values included in SQL queries need to be passed in safely. Bind\nvariables in prepared statements can be used to easily mitigate the risk of\nSQL injection.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "CERT: IDS11-J. Perform any string modifications before validation\n"
              },
              "id": "find_sec_bugs.MODIFICATION_AFTER_VALIDATION-1",
              "name": "find_sec_bugs.MODIFICATION_AFTER_VALIDATION-1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "CERT: IDS11-J. Perform any string modifications before validation\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "You should be very careful whenever you write raw SQL. Consider using Django ORM before raw SQL. See https://docs.djangoproject.com/en/3.0/topics/db/sql/#passing-parameters-into-raw"
              },
              "id": "bandit.B611",
              "name": "bandit.B611",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "You should be very careful whenever you write raw SQL. Consider using Django ORM before raw SQL. See https://docs.djangoproject.com/en/3.0/topics/db/sql/#passing-parameters-into-raw"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Starting a process with a shell: Seems safe, but may be changed in the \nfuture, consider rewriting without shell\n"
              },
              "id": "bandit.B605",
              "name": "bandit.B605",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Starting a process with a shell: Seems safe, but may be changed in the \nfuture, consider rewriting without shell\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Probable insecure usage of temp file/directory.   \n"
              },
              "id": "bandit.B108-2",
              "name": "bandit.B108-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Insecure Temporary File"
                ]
              },
              "shortDescription": {
                "text": "Probable insecure usage of temp file/directory.   \n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "It is possible to attach malicious behavior to those style sheets. Therefore, if an attacker\ncan control the content or the source of the style sheet, he might be able to trigger remote\ncode execution.\n"
              },
              "id": "find_sec_bugs.MALICIOUS_XSLT-1",
              "name": "find_sec_bugs.MALICIOUS_XSLT-1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "It is possible to attach malicious behavior to those style sheets. Therefore, if an attacker\ncan control the content or the source of the style sheet, he might be able to trigger remote\ncode execution.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected usage of crypto.pseudoRandomBytes, which does not produce secure random numbers.\n"
              },
              "id": "eslint.detect-pseudoRandomBytes",
              "name": "eslint.detect-pseudoRandomBytes",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"
                ]
              },
              "shortDescription": {
                "text": "Detected usage of crypto.pseudoRandomBytes, which does not produce secure random numbers.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Found dynamic content when spawning a process. This is dangerous if external\ndata can reach this function call because it allows a malicious actor to\nexecute commands. Ensure no external data reaches here.\n"
              },
              "id": "bandit.B606",
              "name": "bandit.B606",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Found dynamic content when spawning a process. This is dangerous if external\ndata can reach this function call because it allows a malicious actor to\nexecute commands. Ensure no external data reaches here.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Try, Except, Continue\n"
              },
              "id": "bandit.B112",
              "name": "bandit.B112",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-703: Improper Check or Handling of Exceptional Conditions"
                ]
              },
              "shortDescription": {
                "text": "Try, Except, Continue\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected use of the wildcard character in a system call that spawns a shell.\nThis subjects the wildcard to normal shell expansion, which can have unintended consequences\nif there exist any non-standard file names. Consider a file named '-e sh script.sh' -- this\nwill execute a script when 'rsync' is called. See\nhttps://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt\nfor more information.\n"
              },
              "id": "bandit.B609",
              "name": "bandit.B609",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-155: Improper Neutralization of Wildcards or Matching Symbols",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Detected use of the wildcard character in a system call that spawns a shell.\nThis subjects the wildcard to normal shell expansion, which can have unintended consequences\nif there exist any non-standard file names. Consider a file named '-e sh script.sh' -- this\nwill execute a script when 'rsync' is called. See\nhttps://www.defensecode.com/public/DefenseCode_Unix_WildCards_Gone_Wild.txt\nfor more information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Missing 'noopener' on an anchor tag where target='_blank'. This could introduce\na reverse tabnabbing vulnerability. Include 'noopener' when using target='_blank'.\n"
              },
              "id": "eslint.react-missing-noopener",
              "name": "eslint.react-missing-noopener",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Missing 'noopener' on an anchor tag where target='_blank'. This could introduce\na reverse tabnabbing vulnerability. Include 'noopener' when using target='_blank'.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A small key size makes the ciphertext vulnerable to brute force attacks. At least 128 bits of\nentropy should be used when generating the key if use of Blowfish is required.\n"
              },
              "id": "find_sec_bugs.BLOWFISH_KEY_SIZE-1",
              "name": "find_sec_bugs.BLOWFISH_KEY_SIZE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "A small key size makes the ciphertext vulnerable to brute force attacks. At least 128 bits of\nentropy should be used when generating the key if use of Blowfish is required.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Just like SQL, all inputs passed to an LDAP query need to be passed in safely. Unfortunately,\nLDAP doesn't have prepared statement interfaces like SQL. Therefore, the primary defense\nagainst LDAP injection is strong input validation of any untrusted data before including it in\nan LDAP query.\n"
              },
              "id": "find_sec_bugs.LDAP_INJECTION-1",
              "name": "find_sec_bugs.LDAP_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')"
                ]
              },
              "shortDescription": {
                "text": "Just like SQL, all inputs passed to an LDAP query need to be passed in safely. Unfortunately,\nLDAP doesn't have prepared statement interfaces like SQL. Therefore, the primary defense\nagainst LDAP injection is strong input validation of any untrusted data before including it in\nan LDAP query.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize sequences such as \"..\" that can\nresolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/23.html for more information.\"\n"
              },
              "id": "find_sec_bugs.PT_RELATIVE_PATH_TRAVERSAL-1",
              "name": "find_sec_bugs.PT_RELATIVE_PATH_TRAVERSAL-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "\"The software uses an HTTP request parameter to construct a pathname that should be within a\nrestricted directory, but it does not properly neutralize sequences such as \"..\" that can\nresolve to a location that is outside of that directory. See\nhttp://cwe.mitre.org/data/definitions/23.html for more information.\"\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              },
              "id": "security_code_scan.SCS0011-1",
              "name": "security_code_scan.SCS0011-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference"
                ]
              },
              "shortDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Use fork() instead.\n"
              },
              "id": "flawfinder.vfork-1",
              "name": "flawfinder.vfork-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-362: On some old systems, vfork() permits race conditions, and it's very difficult to use correctly (CWE-362)"
                ]
              },
              "shortDescription": {
                "text": "Use fork() instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The ciphertext produced is susceptible to alteration by an adversary. This mean that the\ncipher provides no way to detect that the data has been tampered with. If the ciphertext can be\ncontrolled by an attacker, it could be altered without detection.\n"
              },
              "id": "find_sec_bugs.CIPHER_INTEGRITY-1",
              "name": "find_sec_bugs.CIPHER_INTEGRITY-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-353: Missing Support for Integrity Check"
                ]
              },
              "shortDescription": {
                "text": "The ciphertext produced is susceptible to alteration by an adversary. This mean that the\ncipher provides no way to detect that the data has been tampered with. If the ciphertext can be\ncontrolled by an attacker, it could be altered without detection.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "An attacker could send a link to the victim. By visiting the\nmalicious link, a web page would trigger a POST request (because it is a\nblind attack - the attacker doesn\u2019t see a response from triggered request\nand has no use from GET request and GET requests should not change a state\non the server by definition) to the website. The victim would not be able\nto acknowledge that an action is made in the background, but his cookie\nwould be automatically submitted if he is authenticated to the website.\nThis attack does not require special interaction other than visiting a\nwebsite.\n"
              },
              "id": "security_code_scan.SCS0016-1",
              "name": "security_code_scan.SCS0016-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-352: Cross-Site Request Forgery (CSRF)"
                ]
              },
              "shortDescription": {
                "text": "An attacker could send a link to the victim. By visiting the\nmalicious link, a web page would trigger a POST request (because it is a\nblind attack - the attacker doesn\u2019t see a response from triggered request\nand has no use from GET request and GET requests should not change a state\non the server by definition) to the website. The victim would not be able\nto acknowledge that an action is made in the background, but his cookie\nwould be automatically submitted if he is authenticated to the website.\nThis attack does not require special interaction other than visiting a\nwebsite.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              },
              "id": "security_code_scan.SCS0002-1",
              "name": "security_code_scan.SCS0002-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command (\u2018SQL Injection\u2019)"
                ]
              },
              "shortDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory\ndoes all the appropriate certificate validation checks to make sure you are not\nsubject to man-in-the-middle attacks. Please read the OWASP Transport Layer\nProtection Cheat Sheet for details on how to do this correctly.\n"
              },
              "id": "find_sec_bugs.UNENCRYPTED_SOCKET-1.UNENCRYPTED_SERVER_SOCKET-1",
              "name": "find_sec_bugs.UNENCRYPTED_SOCKET-1.UNENCRYPTED_SERVER_SOCKET-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-319: Cleartext Transmission of Sensitive Information"
                ]
              },
              "shortDescription": {
                "text": "Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory\ndoes all the appropriate certificate validation checks to make sure you are not\nsubject to man-in-the-middle attacks. Please read the OWASP Transport Layer\nProtection Cheat Sheet for details on how to do this correctly.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"
              },
              "id": "find_sec_bugs.WEAK_MESSAGE_DIGEST_MD5-1.WEAK_MESSAGE_DIGEST_SHA1-1",
              "name": "find_sec_bugs.WEAK_MESSAGE_DIGEST_MD5-1.WEAK_MESSAGE_DIGEST_SHA1-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in\nthe exposure of sensitive information.\n"
              },
              "id": "security_code_scan.SCS0010-1",
              "name": "security_code_scan.SCS0010-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                ]
              },
              "shortDescription": {
                "text": "The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in\nthe exposure of sensitive information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use fchmod( ) instead.\n"
              },
              "id": "flawfinder.chmod-1",
              "name": "flawfinder.chmod-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-362: This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362)"
                ]
              },
              "shortDescription": {
                "text": "Use fchmod( ) instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Concatenating unvalidated user input into a URL can allow an attacker to override the value of\na request parameter. Attacker may be able to override existing parameter values, inject a new\nparameter or exploit variables out of a direct reach. HTTP Parameter Pollution (HPP) attacks\nconsist of injecting encoded query string delimiters into other existing parameters. If a web\napplication does not properly sanitize the user input, a malicious user may compromise the\nlogic of the application to perform either client-side or server-side attacks.\n"
              },
              "id": "find_sec_bugs.HTTP_PARAMETER_POLLUTION-1",
              "name": "find_sec_bugs.HTTP_PARAMETER_POLLUTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-88: Improper Neutralization of Argument Delimiters in a Command ('Argument Injection')"
                ]
              },
              "shortDescription": {
                "text": "Concatenating unvalidated user input into a URL can allow an attacker to override the value of\na request parameter. Attacker may be able to override existing parameter values, inject a new\nparameter or exploit variables out of a direct reach. HTTP Parameter Pollution (HPP) attacks\nconsist of injecting encoded query string delimiters into other existing parameters. If a web\napplication does not properly sanitize the user input, a malicious user may compromise the\nlogic of the application to perform either client-side or server-side attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Allowing user input to control format parameters could enable an attacker to cause exceptions\nto be thrown or leak information.Attackers may be able to modify the format string argument,\nsuch that an exception is thrown. If this exception is left uncaught, it may crash the\napplication. Alternatively, if sensitive information is used within the unused arguments,\nattackers may change the format string to reveal this information.\n"
              },
              "id": "find_sec_bugs.FORMAT_STRING_MANIPULATION-1",
              "name": "find_sec_bugs.FORMAT_STRING_MANIPULATION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-134: Use of Externally-Controlled Format String"
                ]
              },
              "shortDescription": {
                "text": "Allowing user input to control format parameters could enable an attacker to cause exceptions\nto be thrown or leak information.Attackers may be able to modify the format string argument,\nsuch that an exception is thrown. If this exception is left uncaught, it may crash the\napplication. Alternatively, if sensitive information is used within the unused arguments,\nattackers may change the format string to reveal this information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Running `socket.bind` to 0.0.0.0, ::, or empty string could unexpectedly\nexpose the server publicly as it binds to all available interfaces. Consider\ninstead getting correct address from an environment variable or\nconfiguration file.\n"
              },
              "id": "bandit.B104",
              "name": "bandit.B104",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                  "OWASP-A6: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Running `socket.bind` to 0.0.0.0, ::, or empty string could unexpectedly\nexpose the server publicly as it binds to all available interfaces. Consider\ninstead getting correct address from an environment variable or\nconfiguration file.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Telnet does not encrypt communications. Use SSH instead.\n"
              },
              "id": "bandit.B312",
              "name": "bandit.B312",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-319: Cleartext Transmission of Sensitive Information",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Telnet does not encrypt communications. Use SSH instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "A file is opened to write to its contents. The filename comes from an input parameter. If an\nunfiltered parameter is passed to this file API, files at an arbitrary filesystem location\ncould be modified. This rule identifies potential path traversal vulnerabilities. In many\ncases, the constructed file path cannot be controlled by the user.\n"
              },
              "id": "find_sec_bugs.PATH_TRAVERSAL_OUT-1.PATH_TRAVERSAL_OUT-1",
              "name": "find_sec_bugs.PATH_TRAVERSAL_OUT-1.PATH_TRAVERSAL_OUT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "A file is opened to write to its contents. The filename comes from an input parameter. If an\nunfiltered parameter is passed to this file API, files at an arbitrary filesystem location\ncould be modified. This rule identifies potential path traversal vulnerabilities. In many\ncases, the constructed file path cannot be controlled by the user.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Check environment variables carefully before using them.\n"
              },
              "id": "flawfinder.g_get_home_dir-1",
              "name": "flawfinder.g_get_home_dir-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: This function is synonymous with 'getenv(\"HOME\")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Check environment variables carefully before using them.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              },
              "id": "bandit.B304-11",
              "name": "bandit.B304-11",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Switch to raise/signal, or some other signalling approach.\n"
              },
              "id": "flawfinder.gsignal-1.ssignal-1",
              "name": "flawfinder.gsignal-1.ssignal-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-676: These functions are considered obsolete on most systems, and very non-portable (Linux-based systems handle them radically different, basically if gsignal/ssignal were the same as raise/signal respectively, while System V considers them a separate set and obsolete) (CWE-676)"
                ]
              },
              "shortDescription": {
                "text": "Switch to raise/signal, or some other signalling approach.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Setting HTML from code is risky because it\u2019s easy to inadvertently expose your users to a cross-site scripting (XSS) attack.\n"
              },
              "id": "eslint.react-dangerouslysetinnerhtml",
              "name": "eslint.react-dangerouslysetinnerhtml",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                  "OWASP-A7: Cross-site Scripting (XSS)"
                ]
              },
              "shortDescription": {
                "text": "Setting HTML from code is risky because it\u2019s easy to inadvertently expose your users to a cross-site scripting (XSS) attack.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Check when opening files - can an attacker redirect it (via symlinks).\n"
              },
              "id": "flawfinder.fopen-1.open-1",
              "name": "flawfinder.fopen-1.open-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-362: Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)"
                ]
              },
              "shortDescription": {
                "text": "Check when opening files - can an attacker redirect it (via symlinks).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Triple DES (also known as 3DES or DESede) is considered strong ciphers for modern\napplications. NIST recommends the usage of AES block ciphers instead of 3DES.\n"
              },
              "id": "find_sec_bugs.TDES_USAGE-1",
              "name": "find_sec_bugs.TDES_USAGE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "Triple DES (also known as 3DES or DESede) is considered strong ciphers for modern\napplications. NIST recommends the usage of AES block ciphers instead of 3DES.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The highlighted API is used to execute a system command. If unfiltered input is passed to this\nAPI, it can lead to arbitrary command execution.\n"
              },
              "id": "find_sec_bugs.COMMAND_INJECTION-1",
              "name": "find_sec_bugs.COMMAND_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                ]
              },
              "shortDescription": {
                "text": "The highlighted API is used to execute a system command. If unfiltered input is passed to this\nAPI, it can lead to arbitrary command execution.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use fchgrp( ) instead.\n"
              },
              "id": "flawfinder.chgrp-1",
              "name": "flawfinder.chgrp-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-362: This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362)"
                ]
              },
              "shortDescription": {
                "text": "Use fchgrp( ) instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The cipher text produced is susceptible to alteration by an adversary. The cipher provides no\nway to detect that the data has been tampered with. If the cipher text can be controlled by an\nattacker, it could be altered without detection. The use of AES in CBC mode with a HMAC is\nrecommended guaranteeing integrity and confidentiality.\n"
              },
              "id": "security_code_scan.SCS0013-1",
              "name": "security_code_scan.SCS0013-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                ]
              },
              "shortDescription": {
                "text": "The cipher text produced is susceptible to alteration by an adversary. The cipher provides no\nway to detect that the data has been tampered with. If the cipher text can be controlled by an\nattacker, it could be altered without detection. The use of AES in CBC mode with a HMAC is\nrecommended guaranteeing integrity and confidentiality.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "A file is opened to read its content. The filename comes from an input parameter. If an\nunfiltered parameter is passed to this file API, files from an arbitrary filesystem location\ncould be read. This rule identifies potential path traversal vulnerabilities. In many cases,\nthe constructed file path cannot be controlled by the user.\n"
              },
              "id": "find_sec_bugs.PATH_TRAVERSAL_IN-1",
              "name": "find_sec_bugs.PATH_TRAVERSAL_IN-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "A file is opened to read its content. The filename comes from an input parameter. If an\nunfiltered parameter is passed to this file API, files from an arbitrary filesystem location\ncould be read. This rule identifies potential path traversal vulnerabilities. In many cases,\nthe constructed file path cannot be controlled by the user.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              },
              "id": "find_sec_bugs.XXE_XMLSTREAMREADER-1",
              "name": "find_sec_bugs.XXE_XMLSTREAMREADER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')"
                ]
              },
              "shortDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              },
              "id": "find_sec_bugs.CUSTOM_INJECTION-1",
              "name": "find_sec_bugs.CUSTOM_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
                ]
              },
              "shortDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B304-4",
              "name": "bandit.B304-4",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "subprocess call - check for execution of untrusted input\n"
              },
              "id": "bandit.B604",
              "name": "bandit.B604",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "subprocess call - check for execution of untrusted input\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The information stored in a custom cookie should not be sensitive or related to the session.\nIn most cases, sensitive data should only be stored in session and referenced by the user's\nsession cookie.\n"
              },
              "id": "find_sec_bugs.COOKIE_USAGE-1",
              "name": "find_sec_bugs.COOKIE_USAGE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                ]
              },
              "shortDescription": {
                "text": "The information stored in a custom cookie should not be sensitive or related to the session.\nIn most cases, sensitive data should only be stored in session and referenced by the user's\nsession cookie.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected an insufficient key size for DSA. NIST recommends\na key size of 2048 or higher.\n"
              },
              "id": "bandit.B505-1",
              "name": "bandit.B505-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected an insufficient key size for DSA. NIST recommends\na key size of 2048 or higher.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Consider strcat_s, strlcat, snprintf, or automatically resizing strings.\n"
              },
              "id": "flawfinder.strncat-1",
              "name": "flawfinder.strncat-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Consider strcat_s, strlcat, snprintf, or automatically resizing strings.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The use of a predictable random value can lead to vulnerabilities when\nused in certain security critical contexts. A quick fix could be to replace\nthe use of java.util.Random with something stronger, such as java.security.SecureRandom.\n"
              },
              "id": "find_sec_bugs.PREDICTABLE_RANDOM-1",
              "name": "find_sec_bugs.PREDICTABLE_RANDOM-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-330: Use of Insufficiently Random Values"
                ]
              },
              "shortDescription": {
                "text": "The use of a predictable random value can lead to vulnerabilities when\nused in certain security critical contexts. A quick fix could be to replace\nthe use of java.util.Random with something stronger, such as java.security.SecureRandom.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "A malicious user in control of a template can run malicious code on the\nserver-side. Velocity templates should be seen as scripts.\n"
              },
              "id": "find_sec_bugs.TEMPLATE_INJECTION_PEBBLE-1.TEMPLATE_INJECTION_FREEMARKER-1.TEMPLATE_INJECTION_VELOCITY-1",
              "name": "find_sec_bugs.TEMPLATE_INJECTION_PEBBLE-1.TEMPLATE_INJECTION_FREEMARKER-1.TEMPLATE_INJECTION_VELOCITY-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                ]
              },
              "shortDescription": {
                "text": "A malicious user in control of a template can run malicious code on the\nserver-side. Velocity templates should be seen as scripts.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-7",
              "name": "bandit.B303-7",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Set up the correct permissions (e.g., using setuid()) and try to open the file directly.\n"
              },
              "id": "flawfinder.access-1",
              "name": "flawfinder.access-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-362: This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!)"
                ]
              },
              "shortDescription": {
                "text": "Set up the correct permissions (e.g., using setuid()) and try to open the file directly.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The HTTPSConnection API has changed frequently with minor releases of Python.\nEnsure you are using the API for your version of Python securely.\nFor example, Python 3 versions prior to 3.4.3 will not verify SSL certificates by default.\nSee https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection\nfor more information.\n"
              },
              "id": "bandit.B309",
              "name": "bandit.B309",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-295: Improper Certificate Validation",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "The HTTPSConnection API has changed frequently with minor releases of Python.\nEnsure you are using the API for your version of Python securely.\nFor example, Python 3 versions prior to 3.4.3 will not verify SSL certificates by default.\nSee https://docs.python.org/3/library/http.client.html#http.client.HTTPSConnection\nfor more information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a different algorithm, such as SHA-256, with a larger, non-repeating salt.\n"
              },
              "id": "flawfinder.crypt-1.crypt_r-1",
              "name": "flawfinder.crypt-1.crypt_r-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: The crypt functions use a poor one-way hashing algorithm; since they only accept passwords of 8 characters or fewer and only a two-byte salt, they are excessively vulnerable to dictionary attacks given today's faster computing equipment (CWE-327)"
                ]
              },
              "shortDescription": {
                "text": "Use a different algorithm, such as SHA-256, with a larger, non-repeating salt.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Allowing external control of system settings can disrupt service or cause an application to\nbehave in unexpected, and potentially malicious ways. An attacker could cause an error by\nproviding a nonexistent catalog name or connect to an unauthorized portion of the database.\n"
              },
              "id": "find_sec_bugs.EXTERNAL_CONFIG_CONTROL-1",
              "name": "find_sec_bugs.EXTERNAL_CONFIG_CONTROL-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-15: External Control of System or Configuration Setting"
                ]
              },
              "shortDescription": {
                "text": "Allowing external control of system settings can disrupt service or cause an application to\nbehave in unexpected, and potentially malicious ways. An attacker could cause an error by\nproviding a nonexistent catalog name or connect to an unauthorized portion of the database.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Prior to HTML5, Web browsers enforced the Same Origin Policy which ensures that in order for\nJavaScript to access the contents of a Web page, both the JavaScript and the Web page must\noriginate from the same domain. Without the Same Origin Policy, a malicious website could serve\nup JavaScript that loads sensitive information from other websites using a client's\ncredentials, cull through it, and communicate it back to the attacker. HTML5 makes it possible\nfor JavaScript to access data across domains if a new HTTP header called\nAccess-Control-Allow-Origin is defined. With this header, a Web server defines which other\ndomains are allowed to access its domain using cross-origin requests. However, caution should\nbe taken when defining the header because an overly permissive CORS policy will allow a\nmalicious application to communicate with the victim application in an inappropriate way,\nleading to spoofing, data theft, relay and other attacks.\n"
              },
              "id": "find_sec_bugs.PERMISSIVE_CORS-2",
              "name": "find_sec_bugs.PERMISSIVE_CORS-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-942: Permissive Cross-domain Policy with Untrusted Domains"
                ]
              },
              "shortDescription": {
                "text": "Prior to HTML5, Web browsers enforced the Same Origin Policy which ensures that in order for\nJavaScript to access the contents of a Web page, both the JavaScript and the Web page must\noriginate from the same domain. Without the Same Origin Policy, a malicious website could serve\nup JavaScript that loads sensitive information from other websites using a client's\ncredentials, cull through it, and communicate it back to the attacker. HTML5 makes it possible\nfor JavaScript to access data across domains if a new HTTP header called\nAccess-Control-Allow-Origin is defined. With this header, a Web server defines which other\ndomains are allowed to access its domain using cross-origin requests. However, caution should\nbe taken when defining the header because an overly permissive CORS policy will allow a\nmalicious application to communicate with the victim application in an inappropriate way,\nleading to spoofing, data theft, relay and other attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected a Jinja2 environment without autoescaping. Jinja2 does not autoescape by default. This is dangerous if you are rendering to a browser because this allows for cross-site scripting (XSS) attacks. If you are in a web context, enable autoescaping by setting 'autoescape=True.' You may also consider using 'jinja2.select_autoescape()' to only enable automatic escaping for certain file extensions."
              },
              "id": "bandit.B701",
              "name": "bandit.B701",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-116: Improper Encoding or Escaping of Output",
                  "OWASP-A7: Cross-Site Scripting (XSS)"
                ]
              },
              "shortDescription": {
                "text": "Detected a Jinja2 environment without autoescaping. Jinja2 does not autoescape by default. This is dangerous if you are rendering to a browser because this allows for cross-site scripting (XSS) attacks. If you are in a web context, enable autoescaping by setting 'autoescape=True.' You may also consider using 'jinja2.select_autoescape()' to only enable automatic escaping for certain file extensions."
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Especially watch out for embedded spaces.\n"
              },
              "id": "flawfinder.CreateProcessAsUser-1.CreateProcessWithLogon-1",
              "name": "flawfinder.CreateProcessAsUser-1.CreateProcessWithLogon-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: This causes a new process to execute and is difficult to use safely (CWE-78)"
                ]
              },
              "shortDescription": {
                "text": "Especially watch out for embedded spaces.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-5",
              "name": "bandit.B303-5",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Markup escaping disabled. This can be used with some template engines to escape\ndisabling of HTML entities, which can lead to XSS attacks.\n"
              },
              "id": "eslint.detect-disable-mustache-escape",
              "name": "eslint.detect-disable-mustache-escape",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation (XSS)",
                  "OWASP-A7: Cross-Site Scripting XSS"
                ]
              },
              "shortDescription": {
                "text": "Markup escaping disabled. This can be used with some template engines to escape\ndisabling of HTML entities, which can lead to XSS attacks.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "This method is part of a REST Web Service (JSR311). The security of this web service should be\nanalyzed; Authentication, if enforced, should be tested. Access control, if enforced, should be\ntested. The inputs should be tracked for potential vulnerabilities. The communication should\nideally be over SSL.\n"
              },
              "id": "find_sec_bugs.JAXRS_ENDPOINT-1",
              "name": "find_sec_bugs.JAXRS_ENDPOINT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation"
                ]
              },
              "shortDescription": {
                "text": "This method is part of a REST Web Service (JSR311). The security of this web service should be\nanalyzed; Authentication, if enforced, should be tested. Access control, if enforced, should be\ntested. The inputs should be tracked for potential vulnerabilities. The communication should\nideally be over SSL.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A HostnameVerifier that accept any host are often use because of certificate\nreuse on many hosts. As a consequence, this is vulnerable to Man-in-the-middle\nattacks since the client will trust any certificate.\n"
              },
              "id": "find_sec_bugs.WEAK_HOSTNAME_VERIFIER-1.WEAK_TRUST_MANAGER-1",
              "name": "find_sec_bugs.WEAK_HOSTNAME_VERIFIER-1.WEAK_TRUST_MANAGER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-295: Improper Certificate Validation"
                ]
              },
              "shortDescription": {
                "text": "A HostnameVerifier that accept any host are often use because of certificate\nreuse on many hosts. As a consequence, this is vulnerable to Man-in-the-middle\nattacks since the client will trust any certificate.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "A file is opened to read its content. The filename comes from an input\nparameter. If an unfiltered parameter is passed to this file API, files from an\narbitrary filesystem location could be read.\n"
              },
              "id": "find_sec_bugs.WEAK_FILENAMEUTILS-1",
              "name": "find_sec_bugs.WEAK_FILENAMEUTILS-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "A file is opened to read its content. The filename comes from an input\nparameter. If an unfiltered parameter is passed to this file API, files from an\narbitrary filesystem location could be read.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-1",
              "name": "bandit.B303-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Certificate verification has been explicitly disabled. This\npermits insecure connections to insecure servers. Re-enable\ncertification validation.\n"
              },
              "id": "bandit.B501",
              "name": "bandit.B501",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-295: Improper Certificate Validation",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Certificate verification has been explicitly disabled. This\npermits insecure connections to insecure servers. Re-enable\ncertification validation.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n"
              },
              "id": "find_sec_bugs.INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE-1",
              "name": "find_sec_bugs.INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-209: Information Exposure Through an Error Message"
                ]
              },
              "shortDescription": {
                "text": "The sensitive information may be valuable information on its own (such as a password), or it\nmay be useful for launching other, more deadly attacks. If an attack fails, an attacker may use\nerror information provided by the server to launch another more focused attack. For example, an\nattempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the\ninstalled application.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n"
              },
              "id": "find_sec_bugs.XSS_SERVLET-2.XSS_SERVLET_PARAMETER-1",
              "name": "find_sec_bugs.XSS_SERVLET-2.XSS_SERVLET_PARAMETER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation"
                ]
              },
              "shortDescription": {
                "text": "The Servlet can read GET and POST parameters from various methods. The value obtained should be\nconsidered unsafe. You may need to validate or sanitize those values before passing them to\nsensitive APIs\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use sprintf_s, snprintf, or vsnprintf.\n"
              },
              "id": "flawfinder.sprintf-1.vsprintf-1.swprintf-1.vswprintf-1._stprintf-1._vstprintf-1",
              "name": "flawfinder.sprintf-1.vsprintf-1.swprintf-1.vswprintf-1._stprintf-1._vstprintf-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Use sprintf_s, snprintf, or vsnprintf.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider possible security implications associated with xmlrpclib module.\n"
              },
              "id": "bandit.B411",
              "name": "bandit.B411",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Consider possible security implications associated with xmlrpclib module.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "The highlighted API is used to execute a system command. If unfiltered input is passed to this\nAPI, it can lead to arbitrary command execution.\n"
              },
              "id": "security_code_scan.SCS0001-1",
              "name": "security_code_scan.SCS0001-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')"
                ]
              },
              "shortDescription": {
                "text": "The highlighted API is used to execute a system command. If unfiltered input is passed to this\nAPI, it can lead to arbitrary command execution.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a constant for the format specification.\n"
              },
              "id": "flawfinder.fprintf-1.vfprintf-1._ftprintf-1._vftprintf-1.fwprintf-1.fvwprintf-1",
              "name": "flawfinder.fprintf-1.vfprintf-1._ftprintf-1._vftprintf-1.fwprintf-1.fvwprintf-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-134: If format strings can be influenced by an attacker, they can be exploited (CWE-134)"
                ]
              },
              "shortDescription": {
                "text": "Use a constant for the format specification.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Make sure that you set inheritance by hand if you wish it to inherit.\n"
              },
              "id": "flawfinder.AddAccessAllowedAce-1",
              "name": "flawfinder.AddAccessAllowedAce-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: This doesn't set the inheritance bits in the access control entry (ACE) header (CWE-732)"
                ]
              },
              "shortDescription": {
                "text": "Make sure that you set inheritance by hand if you wish it to inherit.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "\"A expression is built with a dynamic value. The source of the value(s) should be verified to\navoid that unfiltered values fall into this risky code evaluation.\"\n"
              },
              "id": "find_sec_bugs.OGNL_INJECTION-1",
              "name": "find_sec_bugs.OGNL_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "\"A expression is built with a dynamic value. The source of the value(s) should be verified to\navoid that unfiltered values fall into this risky code evaluation.\"\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Servlet reflected cross site scripting vulnerability\n"
              },
              "id": "find_sec_bugs.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER-1",
              "name": "find_sec_bugs.XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation"
                ]
              },
              "shortDescription": {
                "text": "Servlet reflected cross site scripting vulnerability\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "An authentication cipher mode which provides better confidentiality of the encrypted data\nshould be used instead of Electronic Code Book (ECB) mode, which does not provide good\nconfidentiality. Specifically, ECB mode produces the same output for the same input each time.\nThis allows an attacker to intercept and replay the data.\n"
              },
              "id": "find_sec_bugs.ECB_MODE-1",
              "name": "find_sec_bugs.ECB_MODE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "An authentication cipher mode which provides better confidentiality of the encrypted data\nshould be used instead of Electronic Code Book (ECB) mode, which does not provide good\nconfidentiality. Specifically, ECB mode produces the same output for the same input each time.\nThis allows an attacker to intercept and replay the data.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use a flag like LOAD_LIBRARY_SEARCH_SYSTEM32 or LOAD_LIBRARY_SEARCH_APPLICATION_DIR to search\nonly desired folders.\n"
              },
              "id": "flawfinder.LoadLibraryEx-1",
              "name": "flawfinder.LoadLibraryEx-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Use a flag like LOAD_LIBRARY_SEARCH_SYSTEM32 or LOAD_LIBRARY_SEARCH_APPLICATION_DIR to search\nonly desired folders.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              },
              "id": "find_sec_bugs.XXE_DTD_TRANSFORM_FACTORY-1.XXE_XSLT_TRANSFORM_FACTORY-1",
              "name": "find_sec_bugs.XXE_DTD_TRANSFORM_FACTORY-1.XXE_XSLT_TRANSFORM_FACTORY-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')"
                ]
              },
              "shortDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in\nthe exposure of sensitive information.\n"
              },
              "id": "security_code_scan.SCS0006-1",
              "name": "security_code_scan.SCS0006-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                ]
              },
              "shortDescription": {
                "text": "The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in\nthe exposure of sensitive information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Specify a limit to %s, or use a different input function.\n"
              },
              "id": "flawfinder.scanf-1.vscanf-1.wscanf-1._tscanf-1.vwscanf-1",
              "name": "flawfinder.scanf-1.vscanf-1.wscanf-1._tscanf-1.vwscanf-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Specify a limit to %s, or use a different input function.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Constructing a server-side redirect path with user input could allow an\nattacker to download application binaries (including application classes or\njar files) or view arbitrary files within protected directories.\n"
              },
              "id": "find_sec_bugs.REQUESTDISPATCHER_FILE_DISCLOSURE-1.STRUTS_FILE_DISCLOSURE-1.SPRING_FILE_DISCLOSURE-1",
              "name": "find_sec_bugs.REQUESTDISPATCHER_FILE_DISCLOSURE-1.STRUTS_FILE_DISCLOSURE-1.SPRING_FILE_DISCLOSURE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-552: Files or Directories Accessible to External Parties"
                ]
              },
              "shortDescription": {
                "text": "Constructing a server-side redirect path with user input could allow an\nattacker to download application binaries (including application classes or\njar files) or view arbitrary files within protected directories.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Profiling endpoint automatically exposed on /debug/pprof\n"
              },
              "id": "gosec.G108-1",
              "name": "gosec.G108-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor"
                ]
              },
              "shortDescription": {
                "text": "Profiling endpoint automatically exposed on /debug/pprof\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              },
              "id": "bandit.B301-1",
              "name": "bandit.B301-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Avoid using `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Possible hardcoded password\n"
              },
              "id": "bandit.B106",
              "name": "bandit.B106",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password",
                  "OWASP-A3: Broken Authentication and Session Management"
                ]
              },
              "shortDescription": {
                "text": "Possible hardcoded password\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Use getrlimit(2), setrlimit(2), and sysconf(3) instead.\n"
              },
              "id": "flawfinder.ulimit-1",
              "name": "flawfinder.ulimit-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-676: This C routine is considered obsolete (as opposed to the shell command by the same name, which is NOT obsolete) (CWE-676)"
                ]
              },
              "shortDescription": {
                "text": "Use getrlimit(2), setrlimit(2), and sysconf(3) instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Make sure the return value is checked, and do not continue if a failure is reported.\n"
              },
              "id": "flawfinder.RpcImpersonateClient-1.ImpersonateLoggedOnUser-1.CoImpersonateClient-1.ImpersonateNamedPipeClient-1.ImpersonateDdeClientWindow-1.ImpersonateSecurityContext-1.SetThreadToken-1",
              "name": "flawfinder.RpcImpersonateClient-1.ImpersonateLoggedOnUser-1.CoImpersonateClient-1.ImpersonateNamedPipeClient-1.ImpersonateDdeClientWindow-1.ImpersonateSecurityContext-1.SetThreadToken-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-250: If this call fails, the program could fail to drop heightened privileges (CWE-250)"
                ]
              },
              "shortDescription": {
                "text": "Make sure the return value is checked, and do not continue if a failure is reported.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted\nentity by interfering in the communication path between the host and client. The software might\nconnect to a malicious host while believing it is a trusted host, or the software might be\ndeceived into accepting spoofed data that appears to originate from a trusted host.\n"
              },
              "id": "security_code_scan.SCS0004-1",
              "name": "security_code_scan.SCS0004-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-295: Improper Certificate Validation"
                ]
              },
              "shortDescription": {
                "text": "When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted\nentity by interfering in the communication path between the host and client. The software might\nconnect to a malicious host while believing it is a trusted host, or the software might be\ndeceived into accepting spoofed data that appears to originate from a trusted host.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Avoid using `dill`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              },
              "id": "bandit.B301-3",
              "name": "bandit.B301-3",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Avoid using `dill`, which uses `pickle`, which is known to lead to code execution vulnerabilities.\nWhen unpickling, the serialized data could be manipulated to run arbitrary code.\nInstead, consider serializing the relevant data as JSON or a similar text-based\nserialization format.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution."
              },
              "id": "eslint.detect-object-injection",
              "name": "eslint.detect-object-injection",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-94: Improper Control of Generation of Code ('Code Injection')"
                ]
              },
              "shortDescription": {
                "text": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype, leading to possible code execution."
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Usage of a cryptographically insecure algorithm has been detected. It\nis recommended that alternative algorithms be used instead.\n"
              },
              "id": "gosec.G401-1",
              "name": "gosec.G401-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "Usage of a cryptographically insecure algorithm has been detected. It\nis recommended that alternative algorithms be used instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use of unescaped data in HTML templates\n"
              },
              "id": "gosec.G203-1",
              "name": "gosec.G203-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation"
                ]
              },
              "shortDescription": {
                "text": "Use of unescaped data in HTML templates\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32\n"
              },
              "id": "gosec.G109-1",
              "name": "gosec.G109-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-190: Integer Overflow or Wraparound"
                ]
              },
              "shortDescription": {
                "text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.\n"
              },
              "id": "bandit.B311",
              "name": "bandit.B311",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-330: Use of Insufficiently Random Values",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Standard pseudo-random generators are not suitable for security/cryptographic purposes.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "This code constructs an HTTP Cookie using an untrusted HTTP parameter. If this cookie is added\nto an HTTP response, it will allow a HTTP response splitting vulnerability. See\nhttp://en.wikipedia.org/wiki/HTTP_response_splitting for more information.\n"
              },
              "id": "find_sec_bugs.HRS_REQUEST_PARAMETER_TO_COOKIE-1",
              "name": "find_sec_bugs.HRS_REQUEST_PARAMETER_TO_COOKIE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')"
                ]
              },
              "shortDescription": {
                "text": "This code constructs an HTTP Cookie using an untrusted HTTP parameter. If this cookie is added\nto an HTTP response, it will allow a HTTP response splitting vulnerability. See\nhttp://en.wikipedia.org/wiki/HTTP_response_splitting for more information.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Hardcoded password is used as a default argument to '$FUNC'. This could be dangerous if\na real password is not supplied.\n"
              },
              "id": "bandit.B107",
              "name": "bandit.B107",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password",
                  "OWASP-A3: Broken Authentication and Session Management"
                ]
              },
              "shortDescription": {
                "text": "Hardcoded password is used as a default argument to '$FUNC'. This could be dangerous if\na real password is not supplied.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use LoadLibraryEx with one of the search flags, or call SetSearchPathMode to use a safe search\npath, or pass a full path to the library.\n"
              },
              "id": "flawfinder.LoadLibrary-1",
              "name": "flawfinder.LoadLibrary-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Use LoadLibraryEx with one of the search flags, or call SetSearchPathMode to use a safe search\npath, or pass a full path to the library.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              },
              "id": "find_sec_bugs.HARD_CODE_KEY-3",
              "name": "find_sec_bugs.HARD_CODE_KEY-3",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-321: Use of Hard-coded Cryptographic Key"
                ]
              },
              "shortDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "subprocess call - check for execution of untrusted input\n"
              },
              "id": "bandit.B603",
              "name": "bandit.B603",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "subprocess call - check for execution of untrusted input\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.\n"
              },
              "id": "bandit.B504",
              "name": "bandit.B504",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "ssl.wrap_socket call with no SSL/TLS protocol version specified, the default SSLv23 could be insecure, possible security issue.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "If source untrusted, check both minimum and maximum, even if the input had no minus sign (large\nnumbers can roll over into negative number; consider saving to an unsigned value if that is\nintended).\n"
              },
              "id": "flawfinder.atoi-1.atol-1._wtoi-1._wtoi64-1",
              "name": "flawfinder.atoi-1.atol-1._wtoi-1._wtoi64-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-190: Unless checked, the resulting number can exceed the expected range (CWE-190)"
                ]
              },
              "shortDescription": {
                "text": "If source untrusted, check both minimum and maximum, even if the input had no minus sign (large\nnumbers can roll over into negative number; consider saving to an unsigned value if that is\nintended).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Having the annotation [OutputCache] will disable the annotation [Authorize] for\nthe requests following the first one.\n"
              },
              "id": "security_code_scan.SCS0019-1",
              "name": "security_code_scan.SCS0019-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-524: Use of Cache Containing Sensitive Information"
                ]
              },
              "shortDescription": {
                "text": "Having the annotation [OutputCache] will disable the annotation [Authorize] for\nthe requests following the first one.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Passwords should not be kept in the source code. The source code can be widely shared in an\nenterprise environment, and is certainly shared in open source. To be managed safely, passwords\nand secret keys should be stored in separate configuration files or keystores.\n"
              },
              "id": "find_sec_bugs.HARD_CODE_PASSWORD-1",
              "name": "find_sec_bugs.HARD_CODE_PASSWORD-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password"
                ]
              },
              "shortDescription": {
                "text": "Passwords should not be kept in the source code. The source code can be widely shared in an\nenterprise environment, and is certainly shared in open source. To be managed safely, passwords\nand secret keys should be stored in separate configuration files or keystores.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A potential XSS was found. It could be used to execute unwanted JavaScript in a\nclient's browser.\n"
              },
              "id": "find_sec_bugs.XSS_SERVLET-1",
              "name": "find_sec_bugs.XSS_SERVLET-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                ]
              },
              "shortDescription": {
                "text": "A potential XSS was found. It could be used to execute unwanted JavaScript in a\nclient's browser.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Buffer overflows is not checked\n"
              },
              "id": "flawfinder.lstrcat-1.wcscat-1._tcscat-1._mbscat-1",
              "name": "flawfinder.lstrcat-1.wcscat-1._tcscat-1._mbscat-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Buffer overflows is not checked\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Without proper access control, executing an LDAP statement that contains a\nuser-controlled value can allow an attacker to abuse poorly configured LDAP\ncontext\n"
              },
              "id": "find_sec_bugs.LDAP_ENTRY_POISONING-1",
              "name": "find_sec_bugs.LDAP_ENTRY_POISONING-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation"
                ]
              },
              "shortDescription": {
                "text": "Without proper access control, executing an LDAP statement that contains a\nuser-controlled value can allow an attacker to abuse poorly configured LDAP\ncontext\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "File open from tainted variable\n"
              },
              "id": "gosec.G304-1",
              "name": "gosec.G304-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "File open from tainted variable\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a different patent-free encryption algorithm with a larger keysize, such as 3DES or AES.\n"
              },
              "id": "flawfinder.EVP_rc4_40-1.EVP_rc2_40_cbc-1.EVP_rc2_64_cbc-1",
              "name": "flawfinder.EVP_rc4_40-1.EVP_rc2_40_cbc-1.EVP_rc2_64_cbc-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: These keysizes are too small given today's computers (CWE-327)"
                ]
              },
              "shortDescription": {
                "text": "Use a different patent-free encryption algorithm with a larger keysize, such as 3DES or AES.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "IDS01-J. Normalize strings before validating them\n"
              },
              "id": "find_sec_bugs.NORMALIZATION_AFTER_VALIDATION-1",
              "name": "find_sec_bugs.NORMALIZATION_AFTER_VALIDATION-1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "IDS01-J. Normalize strings before validating them\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use fgets() instead.\n"
              },
              "id": "flawfinder.gets-1._getts-1",
              "name": "flawfinder.gets-1._getts-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows (CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Use fgets() instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use getpwuid(geteuid()) and extract the desired information instead.\n"
              },
              "id": "flawfinder.getlogin-1",
              "name": "flawfinder.getlogin-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-807: It's often easy to fool getlogin.  Sometimes it does not work at all, because some program messed up the utmp file.  Often, it gives only the first 8 characters of the login name. The user currently logged in on the controlling tty of our program need not be the user who started it.  Avoid getlogin() for security-related purposes (CWE-807)"
                ]
              },
              "shortDescription": {
                "text": "Use getpwuid(geteuid()) and extract the desired information instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/"
              },
              "id": "eslint.detect-possible-timing-attacks",
              "name": "eslint.detect-possible-timing-attacks",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-208: Observable Timing Discrepancy"
                ]
              },
              "shortDescription": {
                "text": "String comparisons using '===', '!==', '!=' and '==' is vulnerable to timing attacks. More info: https://snyk.io/blog/node-js-timing-attack-ccc-ctf/"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).\n"
              },
              "id": "flawfinder.strcpyA-1.strcpyW-1.StrCpy-1.StrCpyA-1.lstrcpyA-1.lstrcpyW-1._tccpy-1._mbccpy-1._ftcscpy-1._mbsncpy-1.StrCpyN-1.StrCpyNA-1.StrCpyNW-1.StrNCpy-1.strcpynA-1.StrNCpyA-1.StrNCpyW-1.lstrcpynA-1.lstrcpynW-1",
              "name": "flawfinder.strcpyA-1.strcpyW-1.StrCpy-1.StrCpyA-1.lstrcpyA-1.lstrcpyW-1._tccpy-1._mbccpy-1._ftcscpy-1._mbsncpy-1.StrCpyN-1.StrCpyNA-1.StrCpyNW-1.StrNCpy-1.strcpynA-1.StrNCpyA-1.StrNCpyW-1.lstrcpynA-1.lstrcpynW-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B303-8",
              "name": "bandit.B303-8",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected SHA1 hash algorithm which is considered insecure. SHA1 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected ECB cipher mode which is considered insecure. The algorithm can\npotentially leak information about the plaintext. Use CBC mode instead.\n"
              },
              "id": "bandit.B305",
              "name": "bandit.B305",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected ECB cipher mode which is considered insecure. The algorithm can\npotentially leak information about the plaintext. Use CBC mode instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a constant for the format specification.\n"
              },
              "id": "flawfinder.snprintf-1.vsnprintf-1._snprintf-1._sntprintf-1._vsntprintf-1",
              "name": "flawfinder.snprintf-1.vsnprintf-1._snprintf-1._sntprintf-1._vsntprintf-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-134: If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \\0-terminate (CWE-134)"
                ]
              },
              "shortDescription": {
                "text": "Use a constant for the format specification.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Buffer overflow is not checked.\n"
              },
              "id": "flawfinder.StrCat-1.StrCatA-1.StrcatW-1.lstrcatA-1.lstrcatW-1.strCatBuff-1.StrCatBuffA-1.StrCatBuffW-1.StrCatChainW-1._tccat-1._mbccat-1._ftcscat-1.StrCatN-1.StrCatNA-1.StrCatNW-1.StrNCat-1.StrNCatA-1.StrNCatW-1.lstrncat-1.lstrcatnA-1.lstrcatnW-1",
              "name": "flawfinder.StrCat-1.StrCatA-1.StrcatW-1.lstrcatA-1.lstrcatW-1.strCatBuff-1.StrCatBuffA-1.StrCatBuffW-1.StrCatChainW-1._tccat-1._mbccat-1._ftcscat-1.StrCatN-1.StrCatNA-1.StrCatNW-1.StrNCat-1.StrNCatA-1.StrNCatW-1.lstrncat-1.lstrcatnA-1.lstrcatnW-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Buffer overflow is not checked.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The HttpOnly flag is not set for the cookie. An attacker could perform XSS with a malicious\nscript.\n"
              },
              "id": "security_code_scan.SCS0009-1",
              "name": "security_code_scan.SCS0009-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-1004: Sensitive Cookie Without 'HttpOnly' Flag"
                ]
              },
              "shortDescription": {
                "text": "The HttpOnly flag is not set for the cookie. An attacker could perform XSS with a malicious\nscript.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected DES cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
              },
              "id": "bandit.B304-8",
              "name": "bandit.B304-8",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected DES cipher algorithm which is considered insecure. The algorithm is\nconsidered weak and has been deprecated. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.\n"
              },
              "id": "bandit.B401",
              "name": "bandit.B401",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-319: Cleartext Transmission of Sensitive Information",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Telnet-related functions are being called. Telnet is considered insecure. Use SSH or some other encrypted protocol.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "'mark_safe()' is used to mark a string as \"safe\" for HTML output.\nThis disables escaping and could therefore subject the content to\nXSS attacks. Use 'django.utils.html.format_html()' to build HTML\nfor rendering instead.\n"
              },
              "id": "bandit.B308.B703",
              "name": "bandit.B308.B703",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                  "OWASP-A7: Cross-Site Scripting (XSS)"
                ]
              },
              "shortDescription": {
                "text": "'mark_safe()' is used to mark a string as \"safe\" for HTML output.\nThis disables escaping and could therefore subject the content to\nXSS attacks. Use 'django.utils.html.format_html()' to build HTML\nfor rendering instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "'mark_safe()' is used to mark a string as \"safe\" for HTML output.\nThis disables escaping and could therefore subject the content to\nXSS attacks. Use 'django.utils.html.format_html()' to build HTML\nfor rendering instead.\n"
              },
              "id": "bandit.B703",
              "name": "bandit.B703",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                  "OWASP-A7: Cross-Site Scripting (XSS)"
                ]
              },
              "shortDescription": {
                "text": "'mark_safe()' is used to mark a string as \"safe\" for HTML output.\nThis disables escaping and could therefore subject the content to\nXSS attacks. Use 'django.utils.html.format_html()' to build HTML\nfor rendering instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The SHA-1 message-digest algorithm has been cryptographically broken and\nis unsuitable for further use. It is recommended that the SHA-3, or BLAKE2 family\nof algorithms be used for non-password based cryptographic hashes instead. For\npassword based cryptographic hashes, consider using the bcrypt or Argon2 family\nof cryptographic hashes.\n"
              },
              "id": "gosec.G505-1",
              "name": "gosec.G505-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "The SHA-1 message-digest algorithm has been cryptographically broken and\nis unsuitable for further use. It is recommended that the SHA-3, or BLAKE2 family\nof algorithms be used for non-password based cryptographic hashes instead. For\npassword based cryptographic hashes, consider using the bcrypt or Argon2 family\nof cryptographic hashes.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "SQL query construction using string concatenation\n"
              },
              "id": "gosec.G202-1",
              "name": "gosec.G202-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command"
                ]
              },
              "shortDescription": {
                "text": "SQL query construction using string concatenation\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              },
              "id": "find_sec_bugs.HARD_CODE_KEY-4",
              "name": "find_sec_bugs.HARD_CODE_KEY-4",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-321: Use of Hard-coded Cryptographic Key"
                ]
              },
              "shortDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              },
              "id": "find_sec_bugs.HARD_CODE_KEY-2",
              "name": "find_sec_bugs.HARD_CODE_KEY-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-321: Use of Hard-coded Cryptographic Key"
                ]
              },
              "shortDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol\n"
              },
              "id": "bandit.B402",
              "name": "bandit.B402",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-319: Cleartext Transmission of Sensitive Information",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "functions are being called. FTP is considered insecure. Use SSH/SFTP/SCP or some other encrypted protocol\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Input validation is a first line of defence for a variety of different\nattacks and should be enabled per default. Please do not forget to use\n@Html.AntiForgeryToken() in your view.\n"
              },
              "id": "security_code_scan.SCS0017-1",
              "name": "security_code_scan.SCS0017-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-554: ASP.NET Misconfiguration: Not Using Input Validation Framework"
                ]
              },
              "shortDescription": {
                "text": "Input validation is a first line of defence for a variety of different\nattacks and should be enabled per default. Please do not forget to use\n@Html.AntiForgeryToken() in your view.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected possible formatted SQL query. Use parameterized queries instead.\n"
              },
              "id": "bandit.B608",
              "name": "bandit.B608",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Detected possible formatted SQL query. Use parameterized queries instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "CWE-20: Check buffer boundaries if used in a loop including recursive loops\n"
              },
              "id": "flawfinder.getchar-1.fgetc-1.getc-1.read-1._gettc-1",
              "name": "flawfinder.getchar-1.fgetc-1.getc-1.read-1._gettc-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "CWE-20: Check buffer boundaries if used in a loop including recursive loops\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use fchown( ) instead.\n"
              },
              "id": "flawfinder.chown-1",
              "name": "flawfinder.chown-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-362: This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362)"
                ]
              },
              "shortDescription": {
                "text": "Use fchown( ) instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              },
              "id": "find_sec_bugs.XXE_SAXPARSER-1",
              "name": "find_sec_bugs.XXE_SAXPARSER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')"
                ]
              },
              "shortDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "The software does not properly handle when an input contains Unicode encoding.\n"
              },
              "id": "flawfinder.MultiByteToWideChar-1",
              "name": "flawfinder.MultiByteToWideChar-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Requires maximum length in CHARACTERS, not bytes (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "The software does not properly handle when an input contains Unicode encoding.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Ignoring XML comments in SAML may lead to authentication bypass\n"
              },
              "id": "find_sec_bugs.SAML_IGNORE_COMMENTS-1",
              "name": "find_sec_bugs.SAML_IGNORE_COMMENTS-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-287: Improper Authentication"
                ]
              },
              "shortDescription": {
                "text": "Ignoring XML comments in SAML may lead to authentication bypass\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected hardcoded temp directory. Consider using 'tempfile.TemporaryFile' instead.\n"
              },
              "id": "bandit.B108-1",
              "name": "bandit.B108-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Insecure Temporary File"
                ]
              },
              "shortDescription": {
                "text": "Detected hardcoded temp directory. Consider using 'tempfile.TemporaryFile' instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused).\n"
              },
              "id": "flawfinder.strcat-1",
              "name": "flawfinder.strcat-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused).\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Consider strcat_s, strlcat, or automatically resizing strings.\n"
              },
              "id": "flawfinder.lstrcatn-1.wcsncat-1._tcsncat-1._mbsnbcat-1",
              "name": "flawfinder.lstrcatn-1.wcsncat-1._tcsncat-1._mbsnbcat-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120)"
                ]
              },
              "shortDescription": {
                "text": "Consider strcat_s, strlcat, or automatically resizing strings.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD4 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B304-2",
              "name": "bandit.B304-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD4 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              },
              "id": "find_sec_bugs.XXE_XPATH-1.XXE_DOCUMENT-1",
              "name": "find_sec_bugs.XXE_XPATH-1.XXE_DOCUMENT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')"
                ]
              },
              "shortDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "File traversal when extracting zip/tar archive\n"
              },
              "id": "gosec.G305-1",
              "name": "gosec.G305-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')"
                ]
              },
              "shortDescription": {
                "text": "File traversal when extracting zip/tar archive\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Go versions < 1.6.3 are vulnerable to Httpoxy attack: (CVE-2016-5386)\n"
              },
              "id": "gosec.G504-1",
              "name": "gosec.G504-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "Go versions < 1.6.3 are vulnerable to Httpoxy attack: (CVE-2016-5386)\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Binding to all network interfaces can potentially open up a service to\ntraffic on unintended interfaces, that may not be properly documented or\nsecured. This plugin test looks for a string pattern \u201c0.0.0.0\u201d that may\nindicate a hardcoded binding to all network interfaces.\n"
              },
              "id": "gosec.G102-1",
              "name": "gosec.G102-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-200: Exposure of Sensitive Information to an Unauthorized Actor",
                  "OWASP-A6: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Binding to all network interfaces can potentially open up a service to\ntraffic on unintended interfaces, that may not be properly documented or\nsecured. This plugin test looks for a string pattern \u201c0.0.0.0\u201d that may\nindicate a hardcoded binding to all network interfaces.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "It is recommended that generated RSA keys are at least 2048 bits in length.\n"
              },
              "id": "gosec.G403-1",
              "name": "gosec.G403-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "It is recommended that generated RSA keys are at least 2048 bits in length.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              },
              "id": "find_sec_bugs.CUSTOM_INJECTION-2",
              "name": "find_sec_bugs.CUSTOM_INJECTION-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
                ]
              },
              "shortDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Specify the application path in the first argument, NOT as part of the second, or embedded\nspaces could allow an attacker to force a different program to run.\n"
              },
              "id": "flawfinder.CreateProcess-1",
              "name": "flawfinder.CreateProcess-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: This causes a new process to execute and is difficult to use safely (CWE-78)"
                ]
              },
              "shortDescription": {
                "text": "Specify the application path in the first argument, NOT as part of the second, or embedded\nspaces could allow an attacker to force a different program to run.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected an insufficient key size for DSA. NIST recommends a key size\nof 2048 or higher.\n"
              },
              "id": "find_sec_bugs.RSA_KEY_SIZE-1",
              "name": "find_sec_bugs.RSA_KEY_SIZE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "Detected an insufficient key size for DSA. NIST recommends a key size\nof 2048 or higher.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Check environment variables carefully before using them.\n"
              },
              "id": "flawfinder.g_get_tmp_dir-1",
              "name": "flawfinder.g_get_tmp_dir-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: This function is synonymous with 'getenv(\"TMP\")';it returns untrustable input if the environment can beset by an attacker.  It can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Check environment variables carefully before using them.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Simple Mail Transfer Protocol (SMTP) is a the text based protocol used for\nemail delivery. Like with HTTP, headers are separate by new line separator. If\nkuser input is place in a header line, the application should remove or replace\nnew line characters (CR / LF). You should use a safe wrapper such as Apache\nCommon Email and Simple Java Mail which filter special characters that can lead\nto header injection.\n"
              },
              "id": "find_sec_bugs.SMTP_HEADER_INJECTION-1",
              "name": "find_sec_bugs.SMTP_HEADER_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-77: Improper Neutralization of Special Elements used in a Command"
                ]
              },
              "shortDescription": {
                "text": "Simple Mail Transfer Protocol (SMTP) is a the text based protocol used for\nemail delivery. Like with HTTP, headers are separate by new line separator. If\nkuser input is place in a header line, the application should remove or replace\nnew line characters (CR / LF). You should use a safe wrapper such as Apache\nCommon Email and Simple Java Mail which filter special characters that can lead\nto header injection.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use InitializeCriticalSectionAndSpinCount instead.\n"
              },
              "id": "flawfinder.InitializeCriticalSection-1",
              "name": "flawfinder.InitializeCriticalSection-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-754: Exceptions can be thrown in low-memory situations"
                ]
              },
              "shortDescription": {
                "text": "Use InitializeCriticalSectionAndSpinCount instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B304-3",
              "name": "bandit.B304-3",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD5 hash algorithm which is considered insecure. MD5 is not\ncollision resistant and is therefore not suitable as a cryptographic\nsignature. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              },
              "id": "find_sec_bugs.XXE_XMLREADER-1",
              "name": "find_sec_bugs.XXE_XMLREADER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-611: Improper Restriction of XML External Entity Reference ('XXE')"
                ]
              },
              "shortDescription": {
                "text": "XML External Entity (XXE) attacks can occur when an XML parser supports XML\nentities while processing XML received from an untrusted source.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"
              },
              "id": "eslint.detect-eval-with-expression",
              "name": "eslint.detect-eval-with-expression",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Detected eval(variable), which could allow a malicious actor to run arbitrary code.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Found 'subprocess' function '$FUNC' with 'shell=True'. This is dangerous because this call will spawn\nthe command using a shell process. Doing so propagates current shell settings and variables, which\nmakes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.\n"
              },
              "id": "bandit.B602",
              "name": "bandit.B602",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Found 'subprocess' function '$FUNC' with 'shell=True'. This is dangerous because this call will spawn\nthe command using a shell process. Doing so propagates current shell settings and variables, which\nmakes it much easier for a malicious actor to execute commands. Use 'shell=False' instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "This code creates a database connect using a hardcoded, constant password. Anyone with access\nto either the source code or the compiled code can easily learn the password.\n"
              },
              "id": "find_sec_bugs.DMI_CONSTANT_DB_PASSWORD-1.HARD_CODE_PASSWORD-3",
              "name": "find_sec_bugs.DMI_CONSTANT_DB_PASSWORD-1.HARD_CODE_PASSWORD-3",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-259: Use of Hard-coded Password"
                ]
              },
              "shortDescription": {
                "text": "This code creates a database connect using a hardcoded, constant password. Anyone with access\nto either the source code or the compiled code can easily learn the password.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Some older Unix-like systems create temp files with permission to write by\nall by default, so be sure to set the umask to override this. Also, some older\nUnix systems might fail to use O_EXCL when opening the file, so make sure that\nO_EXCL is used by the library.\n"
              },
              "id": "flawfinder.mkstemp-1",
              "name": "flawfinder.mkstemp-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Potential for temporary file vulnerability in some circumstances."
                ]
              },
              "shortDescription": {
                "text": "Some older Unix-like systems create temp files with permission to write by\nall by default, so be sure to set the umask to override this. Also, some older\nUnix systems might fail to use O_EXCL when opening the file, so make sure that\nO_EXCL is used by the library.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Enabling extensions in Apache XML RPC server or client can lead to deserialization\nvulnerability which would allow an attacker to execute arbitrary code.\n"
              },
              "id": "find_sec_bugs.RPC_ENABLED_EXTENSIONS-1",
              "name": "find_sec_bugs.RPC_ENABLED_EXTENSIONS-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data"
                ]
              },
              "shortDescription": {
                "text": "Enabling extensions in Apache XML RPC server or client can lead to deserialization\nvulnerability which would allow an attacker to execute arbitrary code.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The MD5 message-digest algorithm has been cryptographically broken and is unsuitable for\nfurther use. It is recommended that the SHA-3, or BLAKE2 family of algorithms be used for\nnon-password based cryptographic hashes instead. For password based cryptographic hashes,\nconsider using the bcrypt or Argon2 family of cryptographic hashes.\n"
              },
              "id": "gosec.G501-1",
              "name": "gosec.G501-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "The MD5 message-digest algorithm has been cryptographically broken and is unsuitable for\nfurther use. It is recommended that the SHA-3, or BLAKE2 family of algorithms be used for\nnon-password based cryptographic hashes instead. For password based cryptographic hashes,\nconsider using the bcrypt or Argon2 family of cryptographic hashes.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Starting a process with a partial executable path\n"
              },
              "id": "bandit.B607",
              "name": "bandit.B607",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Starting a process with a partial executable path\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Specify a limit to %s, or use a different input function.\n"
              },
              "id": "flawfinder.fscanf-1.sscanf-1.vsscanf-1.vfscanf-1._ftscanf-1.fwscanf-1.vfwscanf-1.vswscanf-1",
              "name": "flawfinder.fscanf-1.sscanf-1.vsscanf-1.vfscanf-1._ftscanf-1.fwscanf-1.vfwscanf-1.vswscanf-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Specify a limit to %s, or use a different input function.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "try using a library call that implements the same functionality if available.\n"
              },
              "id": "flawfinder.execl-1.execlp-1.execle-1.execv-1.execvp-1.popen-1.WinExec-1.ShellExecute-1",
              "name": "flawfinder.execl-1.execlp-1.execle-1.execv-1.execvp-1.popen-1.WinExec-1.ShellExecute-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: This causes a new program to execute and is difficult to use safely (CWE-78)"
                ]
              },
              "shortDescription": {
                "text": "try using a library call that implements the same functionality if available.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Check environment variables carefully before using them.\n"
              },
              "id": "flawfinder.getenv-1.curl_getenv-1",
              "name": "flawfinder.getenv-1.curl_getenv-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Check environment variables carefully before using them.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected use of express.csrf() middleware before express.methodOverride(). This can\nallow GET requests (which are not checked by csrf) to turn into POST requests later.\n"
              },
              "id": "eslint.detect-no-csrf-before-method-override",
              "name": "eslint.detect-no-csrf-before-method-override",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-352: Cross-Site Request Forgery (CSRF)"
                ]
              },
              "shortDescription": {
                "text": "Detected use of express.csrf() middleware before express.methodOverride(). This can\nallow GET requests (which are not checked by csrf) to turn into POST requests later.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Does not handle strings that are not \\\\0-terminated.\n"
              },
              "id": "flawfinder.strlen-1.wcslen-1._tcslen-1._mbslen-1",
              "name": "flawfinder.strlen-1.wcslen-1._tcslen-1._mbslen-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-126: Does not handle strings that are not \\0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126)"
                ]
              },
              "shortDescription": {
                "text": "Does not handle strings that are not \\\\0-terminated.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The application deserializes untrusted data without sufficiently verifying that\nthe resulting data will be valid.\n"
              },
              "id": "security_code_scan.SCS0028-1",
              "name": "security_code_scan.SCS0028-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data"
                ]
              },
              "shortDescription": {
                "text": "The application deserializes untrusted data without sufficiently verifying that\nthe resulting data will be valid.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The NullCipher implements the Cipher interface by returning ciphertext identical to the\nsupplied plaintext. In a few contexts, such as testing, a NullCipher may be appropriate. Avoid\nusing the NullCipher. Its accidental use can introduce a significant confidentiality risk.\n"
              },
              "id": "find_sec_bugs.NULL_CIPHER-1",
              "name": "find_sec_bugs.NULL_CIPHER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                ]
              },
              "shortDescription": {
                "text": "The NullCipher implements the Cipher interface by returning ciphertext identical to the\nsupplied plaintext. In a few contexts, such as testing, a NullCipher may be appropriate. Avoid\nusing the NullCipher. Its accidental use can introduce a significant confidentiality risk.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Server-Side Request Forgery occur when a web server executes a request to a\nuser supplied destination parameter that is not validated. Such vulnerabilities\ncould allow an attacker to access internal services or to launch attacks from\nyour web server.\n"
              },
              "id": "find_sec_bugs.URLCONNECTION_SSRF_FD-1",
              "name": "find_sec_bugs.URLCONNECTION_SSRF_FD-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-918: Server-Side Request Forgery (SSRF)"
                ]
              },
              "shortDescription": {
                "text": "Server-Side Request Forgery occur when a web server executes a request to a\nuser supplied destination parameter that is not validated. Such vulnerabilities\ncould allow an attacker to access internal services or to launch attacks from\nyour web server.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Improper Handling of Unicode Encoding\n"
              },
              "id": "find_sec_bugs.IMPROPER_UNICODE-1",
              "name": "find_sec_bugs.IMPROPER_UNICODE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-176: Improper Handling of Unicode Encoding"
                ]
              },
              "shortDescription": {
                "text": "Improper Handling of Unicode Encoding\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n"
              },
              "id": "bandit.B506",
              "name": "bandit.B506",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-502: Deserialization of Untrusted Data",
                  "OWASP-A8: Insecure Deserialization"
                ]
              },
              "shortDescription": {
                "text": "Avoid using `load()`. `PyYAML.load` can create arbitrary Python\nobjects. A malicious actor could exploit this to run arbitrary\ncode. Use `safe_load()` instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate\ndynamic content. If this content can be input from outside the program, this\nmay be a code injection vulnerability. Ensure evaluated content is not definable\nby external sources. Consider using safer ast.literal_eval.\n"
              },
              "id": "bandit.B307",
              "name": "bandit.B307",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Detected the use of eval(). eval() can be dangerous if used to evaluate\ndynamic content. If this content can be input from outside the program, this\nmay be a code injection vulnerability. Ensure evaluated content is not definable\nby external sources. Consider using safer ast.literal_eval.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Poor file permissions used when creating a directory\n"
              },
              "id": "gosec.G301-1",
              "name": "gosec.G301-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-732: Incorrect Permission Assignment for Critical Resource",
                  "OWASP-A6: Security Misconfiguration"
                ]
              },
              "shortDescription": {
                "text": "Poor file permissions used when creating a directory\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Avoid using custom XSS filtering. Please use standard sanitization functions.\n"
              },
              "id": "find_sec_bugs.XSS_REQUEST_WRAPPER-1",
              "name": "find_sec_bugs.XSS_REQUEST_WRAPPER-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                ]
              },
              "shortDescription": {
                "text": "Avoid using custom XSS filtering. Please use standard sanitization functions.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a constant format string for syslog.\n"
              },
              "id": "flawfinder.syslog-1",
              "name": "flawfinder.syslog-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-134: If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134)"
                ]
              },
              "shortDescription": {
                "text": "Use a constant format string for syslog.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Implicit memory aliasing in for loop.\n"
              },
              "id": "gosec.G601-1",
              "name": "gosec.G601-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-118: Incorrect Access of Indexable Resource ('Range Error')"
                ]
              },
              "shortDescription": {
                "text": "Implicit memory aliasing in for loop.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected an insufficient curve size for EC. NIST recommends\na key size of 224 or higher. For example, use 'ec.SECP256R1'.\n"
              },
              "id": "bandit.B505-2",
              "name": "bandit.B505-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected an insufficient curve size for EC. NIST recommends\na key size of 224 or higher. For example, use 'ec.SECP256R1'.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"
              },
              "id": "find_sec_bugs.DES_USAGE-1",
              "name": "find_sec_bugs.DES_USAGE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-326: Inadequate Encryption Strength"
                ]
              },
              "shortDescription": {
                "text": "DES is considered strong ciphers for modern applications. Currently, NIST recommends the usage\nof AES block ciphers instead of DES.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n"
              },
              "id": "find_sec_bugs.INSECURE_COOKIE-1",
              "name": "find_sec_bugs.INSECURE_COOKIE-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-539: Information Exposure Through Persistent Cookies"
                ]
              },
              "shortDescription": {
                "text": "\"Storing sensitive data in a persistent cookie for an extended period can lead to a breach of\nconfidentiality or account compromise.\"\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Audit the use of ssh.InsecureIgnoreHostKey\n"
              },
              "id": "gosec.G106-1",
              "name": "gosec.G106-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-322: Key Exchange without Entity Authentication"
                ]
              },
              "shortDescription": {
                "text": "Audit the use of ssh.InsecureIgnoreHostKey\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Constructing SimpleDB queries containing user input can allow an attacker to view unauthorized\nrecords.\n"
              },
              "id": "find_sec_bugs.AWS_QUERY_INJECTION-1",
              "name": "find_sec_bugs.AWS_QUERY_INJECTION-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-943: Improper Neutralization of Special Elements in Data Query Logic"
                ]
              },
              "shortDescription": {
                "text": "Constructing SimpleDB queries containing user input can allow an attacker to view unauthorized\nrecords.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected MD2 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              },
              "id": "bandit.B304-1",
              "name": "bandit.B304-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected MD2 hash algorithm which is considered insecure. This algorithm\nhas many known vulnerabilities and has been deprecated. Use SHA256 or SHA3 instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The Python 'os' tempnam|tmpnam functions are vulnerable to symlink attacks"
              },
              "id": "bandit.B325",
              "name": "bandit.B325",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-377: Insecure Temporary File"
                ]
              },
              "shortDescription": {
                "text": "The Python 'os' tempnam|tmpnam functions are vulnerable to symlink attacks"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              },
              "id": "bandit.B304-7",
              "name": "bandit.B304-7",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Detected Blowfish cipher algorithm which is considered insecure. The algorithm has many\nknown vulnerabilities. Use AES instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Use a different patent-free encryption algorithm with a larger keysize, such as 3DES or AES.\n"
              },
              "id": "flawfinder.EVP_des_ecb-1.EVP_des_cbc-1.EVP_des_cfb-1.EVP_des_ofb-1.EVP_desx_cbc-1",
              "name": "flawfinder.EVP_des_ecb-1.EVP_des_cbc-1.EVP_des_cfb-1.EVP_des_ofb-1.EVP_desx_cbc-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: DES only supports a 56-bit keysize, which is too small given today's computers (CWE-327)"
                ]
              },
              "shortDescription": {
                "text": "Use a different patent-free encryption algorithm with a larger keysize, such as 3DES or AES.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
              },
              "id": "bandit.B601",
              "name": "bandit.B601",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "Unverified SSL context detected. This will permit insecure connections without verifying\nSSL certificates. Use 'ssl.create_default_context()' instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Usage of a cryptographically insecure cipher suite has been detected. It is recommended that \nalternative ciphers be used instead.\n"
              },
              "id": "gosec.G402-1",
              "name": "gosec.G402-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "Usage of a cryptographically insecure cipher suite has been detected. It is recommended that \nalternative ciphers be used instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against\nimplementation problems, the input argument should also be checked to ensure it is no larger\nthan MAXPATHLEN.\n"
              },
              "id": "flawfinder.realpath-1",
              "name": "flawfinder.realpath-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!)"
                ]
              },
              "shortDescription": {
                "text": "Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against\nimplementation problems, the input argument should also be checked to ensure it is no larger\nthan MAXPATHLEN.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Without proper access control, executing an LDAP statement that contains a\nuser-controlled value can allow an attacker to abuse poorly configured LDAP\ncontext\n"
              },
              "id": "find_sec_bugs.LDAP_ANONYMOUS-1",
              "name": "find_sec_bugs.LDAP_ANONYMOUS-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation"
                ]
              },
              "shortDescription": {
                "text": "Without proper access control, executing an LDAP statement that contains a\nuser-controlled value can allow an attacker to abuse poorly configured LDAP\ncontext\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Check implementation on installation, or limit the size of all string inputs.\n"
              },
              "id": "flawfinder.getopt-1.getopt_long-1",
              "name": "flawfinder.getopt-1.getopt_long-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-120: Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Check implementation on installation, or limit the size of all string inputs.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              },
              "id": "find_sec_bugs.HARD_CODE_KEY-1",
              "name": "find_sec_bugs.HARD_CODE_KEY-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-321: Use of Hard-coded Cryptographic Key"
                ]
              },
              "shortDescription": {
                "text": "Cryptographic keys should not be kept in the source code. The source code can be widely shared\nin an enterprise environment, and is certainly shared in open source. To be managed safely,\npasswords and secret keys should be stored in separate configuration files or keystores.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Implementing a custom MessageDigest is error-prone. National Institute of Standards and\nTechnology(NIST) recommends the use of SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, or\nSHA-512/256.\n"
              },
              "id": "find_sec_bugs.CUSTOM_MESSAGE_DIGEST-1",
              "name": "find_sec_bugs.CUSTOM_MESSAGE_DIGEST-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm"
                ]
              },
              "shortDescription": {
                "text": "Implementing a custom MessageDigest is error-prone. National Institute of Standards and\nTechnology(NIST) recommends the use of SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, or\nSHA-512/256.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A new cookie is created without the Secure flag set. The Secure flag is a directive to the\nbrowser to make sure that the cookie is not sent for insecure communication (http://)\n"
              },
              "id": "find_sec_bugs.COOKIE_PERSISTENT-1",
              "name": "find_sec_bugs.COOKIE_PERSISTENT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
                ]
              },
              "shortDescription": {
                "text": "A new cookie is created without the Secure flag set. The Secure flag is a directive to the\nbrowser to make sure that the cookie is not sent for insecure communication (http://)\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Use of assert detected. The enclosed code will be removed when\ncompiling to optimised byte code.\n"
              },
              "id": "bandit.B101",
              "name": "bandit.B101",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-754: Improper Check for Unusual or Exceptional Conditions"
                ]
              },
              "shortDescription": {
                "text": "Use of assert detected. The enclosed code will be removed when\ncompiling to optimised byte code.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "Mako templates do not provide a global HTML escaping mechanism.\nThis means you must escape all sensitive data in your templates\nusing '| u' for URL escaping or '| h' for HTML escaping.\nIf you are using Mako to serve web content, consider using\na system such as Jinja2 which enables global escaping.\n"
              },
              "id": "bandit.B702",
              "name": "bandit.B702",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                  "OWASP-A7: Cross-Site Scripting (XSS)"
                ]
              },
              "shortDescription": {
                "text": "Mako templates do not provide a global HTML escaping mechanism.\nThis means you must escape all sensitive data in your templates\nusing '| u' for URL escaping or '| h' for HTML escaping.\nIf you are using Mako to serve web content, consider using\na system such as Jinja2 which enables global escaping.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "A potential XSS was found. The endpoint returns a variable from the client\ninput that has not been encoded. To protect against stored XSS attacks, make\nsure any dynamic content coming from user or data store cannot be used to\ninject JavaScript on a page. Most modern frameworks will escape dynamic content\nby default automatically (Razor for example)\n"
              },
              "id": "security_code_scan.SCS0029-1",
              "name": "security_code_scan.SCS0029-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-79: Improper Neutralization of Input During Web Page Generation (\u2018Cross-site Scripting\u2019)"
                ]
              },
              "shortDescription": {
                "text": "A potential XSS was found. The endpoint returns a variable from the client\ninput that has not been encoded. To protect against stored XSS attacks, make\nsure any dynamic content coming from user or data store cannot be used to\ninject JavaScript on a page. Most modern frameworks will escape dynamic content\nby default automatically (Razor for example)\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "This is a last resort. You should be careful when using QuerySet.extra due to SQLi https://docs.djangoproject.com/en/3.0/ref/models/querysets/#django.db.models.query.QuerySet.extra"
              },
              "id": "bandit.B610",
              "name": "bandit.B610",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')",
                  "OWASP-A1: Injection"
                ]
              },
              "shortDescription": {
                "text": "This is a last resort. You should be careful when using QuerySet.extra due to SQLi https://docs.djangoproject.com/en/3.0/ref/models/querysets/#django.db.models.query.QuerySet.extra"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Use of weak random number generator (math/rand instead of crypto/rand)\n"
              },
              "id": "gosec.G404-1",
              "name": "gosec.G404-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
                  "OWASP-A3: Sensitive Data Exposure"
                ]
              },
              "shortDescription": {
                "text": "Use of weak random number generator (math/rand instead of crypto/rand)\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead."
              },
              "id": "bandit.B310-2",
              "name": "bandit.B310-2",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-939: Improper Authorization in Handler for Custom URL Scheme",
                  "OWASP-A5: Broken Access Control"
                ]
              },
              "shortDescription": {
                "text": "Detected a dynamic value being used with urllib. urllib supports 'file://' schemes, so a dynamic value controlled by a malicious actor may allow them to read arbitrary files. Audit uses of urllib calls to ensure user data cannot control the URLs, or consider using the 'requests' library instead."
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n"
              },
              "id": "eslint.detect-non-literal-regexp",
              "name": "eslint.detect-non-literal-regexp",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-185: Incorrect Regular Expression"
                ]
              },
              "shortDescription": {
                "text": "RegExp() called with a variable, this might allow an attacker to DOS your application with a long-running regular expression.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The Servlet can read GET and POST parameters from various methods. The\nvalue obtained should be considered unsafe.\"\n"
              },
              "id": "find_sec_bugs.SERVLET_PARAMETER-1.SERVLET_CONTENT_TYPE-1.SERVLET_SERVER_NAME-1.SERVLET_SESSION_ID-1.SERVLET_QUERY_STRING-1.SERVLET_HEADER-1.SERVLET_HEADER_REFERER-1.SERVLET_HEADER_USER_AGENT-1",
              "name": "find_sec_bugs.SERVLET_PARAMETER-1.SERVLET_CONTENT_TYPE-1.SERVLET_SERVER_NAME-1.SERVLET_SESSION_ID-1.SERVLET_QUERY_STRING-1.SERVLET_HEADER-1.SERVLET_HEADER_REFERER-1.SERVLET_HEADER_USER_AGENT-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: Improper Input Validation"
                ]
              },
              "shortDescription": {
                "text": "The Servlet can read GET and POST parameters from various methods. The\nvalue obtained should be considered unsafe.\"\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "Usage of a cryptographically broken primitive has been detected. It is recommended that \nChaCha20 or Advanced Encryption Standard (AES) be used instead.\n"
              },
              "id": "gosec.G502-1",
              "name": "gosec.G502-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-327: Use of a Broken or Risky Cryptographic Algorithm",
                  "OWASP-A9: Using Components with Known Vulnerabilities"
                ]
              },
              "shortDescription": {
                "text": "Usage of a cryptographically broken primitive has been detected. It is recommended that \nChaCha20 or Advanced Encryption Standard (AES) be used instead.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the\nuser agent to send those cookies in plaintext over an HTTP session.\n"
              },
              "id": "security_code_scan.SCS0008-1",
              "name": "security_code_scan.SCS0008-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-614: Sensitive Cookie in HTTPS Session Without \u2018Secure\u2019 Attribute"
                ]
              },
              "shortDescription": {
                "text": "The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the\nuser agent to send those cookies in plaintext over an HTTP session.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "Reconsider approach.\n"
              },
              "id": "flawfinder.readlink-1",
              "name": "flawfinder.readlink-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-20: This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20)"
                ]
              },
              "shortDescription": {
                "text": "Reconsider approach.\n"
              }
            },
            {
              "defaultConfiguration": {
                "level": "note"
              },
              "fullDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              },
              "id": "security_code_scan.SCS0003-1",
              "name": "security_code_scan.SCS0003-1",
              "properties": {
                "precision": "very-high",
                "tags": [
                  "CWE-643: Improper Neutralization of Data within XPath Expressions (\u2018XPath Injection\u2019)"
                ]
              },
              "shortDescription": {
                "text": "The method identified is susceptible to injection. The input should be validated and properly\nescaped.\n"
              }
            }
          ],
          "semanticVersion": "0.110.0"
        }
      }
    }
  ],
  "version": "2.1.0"
}